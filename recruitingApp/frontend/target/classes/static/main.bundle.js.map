{"version":3,"sources":["/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/$_gendir lazy","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/app.component.css","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/app.component.html","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/app.component.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/app.module.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/app.routing.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/app.service.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-apply/appl-apply.component.css","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-apply/appl-apply.component.html","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-apply/appl-apply.component.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-apply/appl-apply.service.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-dashboard/appl-dashboard.component.css","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-dashboard/appl-dashboard.component.html","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-dashboard/appl-dashboard.component.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-dashboard/appl-dashboard.service.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-jobinfo/appl-jobinfo.component.css","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-jobinfo/appl-jobinfo.component.html","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-jobinfo/appl-jobinfo.component.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-jobinfo/appl-jobinfo.service.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/base/base.component.css","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/base/base.component.html","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/base/base.component.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/login/login.component.css","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/login/login.component.html","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/login/login.component.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/login/login.service.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/register/register.component.css","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/register/register.component.html","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/register/register.component.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/register/register.service.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/authenticate.component.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/comp-dashboard/comp-dashboard.component.css","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/comp-dashboard/comp-dashboard.component.html","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/comp-dashboard/comp-dashboard.component.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/edit-job/edit-job.component.css","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/edit-job/edit-job.component.html","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/edit-job/edit-job.component.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/edit-job/edit-job.service.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/list-jobs/list-jobs.component.css","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/list-jobs/list-jobs.component.html","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/list-jobs/list-jobs.component.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/list-jobs/list-jobs.service.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/post-job/post-job.component.css","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/post-job/post-job.component.html","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/post-job/post-job.component.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/post-job/post-job.service.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/environments/environment.ts","/Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host .navbar {\\n\\tbox-shadow: 0 1px 8px 0 rgba(0, 0, 0, .2), 0 3px 4px 0\\n\\t\\trgba(0, 0, 0, .14), 0 3px 3px -2px rgba(0, 0, 0, .12);\\n\\tz-index: 1;\\n\\tcolor: #777;\\n\\tmargin-bottom: 10px;\\n}\\n\\n:host .fixed-nav{\\n\\twidth: 100%;\\n\\tdisplay: -ms-flexbox;\\n\\tdisplay: flex;\\n    -ms-flex-pack: justify;\\n        justify-content: space-between;\\n}\\n\\n:host .navbar-header{\\n\\tfloat: left;\\n    width: 75%;\\n}\\n\\n:host .navbar-brand{\\n    height: 50px;\\n}\\n\\n:host .navbar-logo{\\n    height: 50px;\\n}\\n\\n.footer {\\n   position: fixed;\\n   left: 0;\\n   bottom: 0;\\n   width: 100%;\\n   background-color: rgb(241, 239, 239); \\n   color: rgb(0, 0, 0);\\n   text-align: center;\\n }\\n\\n .container {\\n\\t -ms-flex-line-pack: center;\\n\\t     align-content: center;\\n\\t text-align: center;\\n     overflow: auto;\\n }\\n\\n .content-container {\\n\\t -ms-flex-line-pack: center;\\n\\t     align-content: center;\\n\\t text-align: center;\\n     overflow: auto;\\n     padding-left: 250px;\\n }\\n\\n:host .btn-block{\\n    width: 75%;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!-- Header menu -->\\n<nav class=\\\"navbar navbar-default navbar-fixed-top navbar-height\\\">\\n  <div class=\\\"container-fluid\\\">\\n      <div class=\\\"fixed-nav\\\">\\n          <div class=\\\"navbar-header\\\">\\n              <a class=\\\"navbar-brand\\\" href=\\\"/\\\">\\n                  <img class=\\\"navbar-logo\\\" src=\\\"../assets/img/pw_logo.png\\\" alt=\\\"People-Ware Recruiting Application\\\">\\n              </a>\\n              <div class=\\\"navbar-brand\\\">{{title}}</div>\\n          </div>\\n      </div>\\n  </div>\\n</nav>\\n\\n<!-- Main Body -->\\n\\n<div class=\\\"container-fluid\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n<!-- Footer -->\\n<footer class=\\\"footer\\\">\\n  <div class=\\\"container\\\">\\n    Recruiting Application&nbsp;v0.01&nbsp;&mdash;&nbsp;&copy;&nbsp;2018 PeopleWare\\n  </div>\\n</footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, \n         OnInit }             from '@angular/core';\nimport { AppService }         from './app.service';\nimport { Router }             from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [AppService]\n})\n\nexport class AppComponent implements OnInit {\n\n  title = 'PEOPLE-WARE: Recruiting Application';\n  private show: Boolean = true;\n\n  constructor(private appService: AppService,\n    private router: Router) {\n    this.show = true;\n  }\n\n  ngOnInit(): void {\n    console.log(\"\\n ********************** \\n * UI has Initialized * \\n **********************\\n\\n\");\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppRouting } from './app.routing';\n\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { LoginComponent } from './auth/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RegisterComponent } from './auth/register/register.component';\nimport { BaseComponent } from './auth/base/base.component';\nimport { AuthenticateComponent } from './authenticate.component';\nimport { CompDashboardComponent } from './company/comp-dashboard/comp-dashboard.component';\nimport { PostJobComponent } from './company/post-job/post-job.component';\nimport { EditJobComponent } from './company/edit-job/edit-job.component';\nimport { ListJobsComponent } from './company/list-jobs/list-jobs.component';\nimport { ApplDashboardComponent } from './applicant/appl-dashboard/appl-dashboard.component';\nimport { BsDropdownModule } from 'ngx-bootstrap';\nimport { ApplJobinfoComponent } from './applicant/appl-jobinfo/appl-jobinfo.component';\nimport { ApplApplyComponent } from './applicant/appl-apply/appl-apply.component';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown/angular2-multiselect-dropdown'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    BaseComponent,\n    CompDashboardComponent,\n    PostJobComponent,\n    EditJobComponent,\n    ListJobsComponent,\n    ApplDashboardComponent,\n    ApplJobinfoComponent,\n    ApplApplyComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    HttpClientModule,\n    AppRouting,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDropdownModule.forRoot(),\n    AngularMultiSelectModule,\n  ],\n  providers: [AuthenticateComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/app.module.ts","import { NgModule }                 from \"@angular/core\";\nimport { RouterModule, \n         Routes}                    from '@angular/router';\n\nimport { RegisterComponent }        from \"./auth/register/register.component\";\nimport { LoginComponent }           from \"./auth/login/login.component\";\nimport { BaseComponent }            from \"./auth/base/base.component\";\nimport { CompDashboardComponent }   from \"./company/comp-dashboard/comp-dashboard.component\";\nimport { EditJobComponent }         from \"./company/edit-job/edit-job.component\";\nimport { PostJobComponent }         from \"./company/post-job/post-job.component\";\nimport { ListJobsComponent }        from \"./company/list-jobs/list-jobs.component\";\nimport { ApplDashboardComponent }   from \"./applicant/appl-dashboard/appl-dashboard.component\";\nimport { ApplApplyComponent } from \"./applicant/appl-apply/appl-apply.component\";\nimport { ApplJobinfoComponent } from \"./applicant/appl-jobinfo/appl-jobinfo.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BaseComponent,\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'compDashboard',\n    component: CompDashboardComponent\n  },\n  {\n    path: 'editJob',\n    component: EditJobComponent\n  },\n  {\n    path: 'postJob',\n    component: PostJobComponent\n  },\n  {\n    path: 'listJobs',\n    component: ListJobsComponent\n  },\n  {\n    path: 'applDashboard',\n    component: ApplDashboardComponent\n  },\n  {\n    path: 'applApply/:jobid',\n    component: ApplApplyComponent\n  },\n  {\n    path: 'applJobInfo/:jobid',\n    component: ApplJobinfoComponent\n  },\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: false })],\n  exports: [RouterModule]\n})\n\nexport class AppRouting { }\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/app.routing.ts","import {  Injectable, \n          Inject }              from '@angular/core';\nimport {  HttpClient }          from '@angular/common/http';\n\n@Injectable()\nexport class AppService {\n\n  constructor(@Inject(HttpClient) private httpClient: HttpClient) { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/app.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host .form-check-label{\\n    padding-right: 120px;\\n}\\n\\n:host .container-content{\\n    position: absolute;\\n    padding-left: 40%; \\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-apply/appl-apply.component.css\n// module id = ../../../../../src/app/applicant/appl-apply/appl-apply.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Apply Job</h1>\\n</div>\\n\\n\\n<div class=\\\"container\\\">\\n  <form>\\n\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-form-label\\\">Job Role</label>\\n        <input id=\\\"jobname\\\" name=\\\"jobname\\\" class=\\\"form-control\\\" required minlength=\\\"2\\\" [(ngModel)]=\\\"jobname\\\" placeholder=\\\"Job Role\\\"\\n          #jname=\\\"ngModel\\\" disabled>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-form-label\\\">Job Description</label>\\n        <textarea id=\\\"description\\\" rows=\\\"2\\\" name=\\\"description\\\" class=\\\"form-control\\\" required minlength=\\\"4\\\" placeholder=\\\"Job Description\\\"\\n          [(ngModel)]=\\\"description\\\" #dname=\\\"ngModel\\\" disabled></textarea>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\">Full Name</label>\\n          <input id=\\\"fullname\\\" name=\\\"fullname\\\" class=\\\"form-control\\\" required minlength=\\\"2\\\" [(ngModel)]=\\\"fullname\\\" placeholder=\\\"Full Name\\\"\\n            #fname=\\\"ngModel\\\" [disabled]=\\\"hasApplied\\\" required>\\n          <!-- FIELD VALIDATOR -->\\n          <div *ngIf=\\\"fname.invalid && (fname.dirty || fname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n            <div *ngIf=\\\"fname.errors.required\\\">\\n              Full Name is required.\\n            </div>\\n            <div *ngIf=\\\"fname.errors.minlength\\\">\\n              Full Name must be at least 2 characters long.\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n        <input type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" aria-describedby=\\\"emailHelp\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Enter email\\\"\\n          #elname=\\\"ngModel\\\" [disabled]=\\\"hasApplied\\\" required>\\n        <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">Format: example@email.com</small>\\n        <!-- FIELD VALIDATOR -->\\n        <div *ngIf=\\\"elname.invalid && (elname.dirty || elname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n          <div *ngIf=\\\"elname.errors.required\\\">\\n            Email is required.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\">Phone Number</label>\\n          <input id=\\\"contact\\\" name=\\\"contact\\\" class=\\\"form-control\\\" required minlength=\\\"10\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"contact\\\" placeholder=\\\"Phone Number\\\"\\n            #pname=\\\"ngModel\\\" [disabled]=\\\"hasApplied\\\" required>\\n          <!-- FIELD VALIDATOR -->\\n          <div *ngIf=\\\"pname.invalid && (pname.dirty || pname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n            <div *ngIf=\\\"pname.errors.required\\\">\\n              Phone Number is required.\\n            </div>\\n            <div *ngIf=\\\"pname.errors.minlength\\\">\\n              Phone Number must be 10 digits long.\\n            </div>\\n            <div *ngIf=\\\"pname.errors.maxlength\\\">\\n              Phone Number must be 10 digits long.\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" *ngIf=\\\"!hasApplied\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\">Academic Degree/s</label>\\n          <angular2-multiselect [data]=\\\"degreesList\\\" [(ngModel)]=\\\"selectedDegrees\\\" name=\\\"degreesDropDwn\\\" [settings]=\\\"dropdownSettings\\\"\\n            (onSelect)=\\\"onItemSelect($event)\\\" (onDeSelect)=\\\"OnItemDeSelect($event)\\\" (onSelectAll)=\\\"onSelectAll($event)\\\" (onDeSelectAll)=\\\"onDeSelectAll($event)\\\"\\n            #dgname=\\\"ngModel\\\">\\n            <c-item>\\n              <ng-template let-item=\\\"item\\\">\\n                <label style=\\\"color: #333;min-width: 50px;\\\">{{item.qualName}}</label>\\n              </ng-template>\\n            </c-item>\\n          </angular2-multiselect>\\n        </div>\\n        <!-- FIELD VALIDATOR -->\\n        <div *ngIf=\\\"dgname.invalid && (dgname.dirty || dgname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n          <div *ngIf=\\\"dgname.errors.required\\\">\\n            Atleast One Skill Set is required.\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\">Select the Skill/s from 'SKILLS' Box and set the Scale [5 - Expert .... 1 - Novice]. Press Enter upon Completion.</label>\\n          <div class=\\\"form-check\\\" (click)=\\\"radioSkill($event)\\\">\\n            <label class=\\\"form-check-label\\\">Scale of Each Skill:</label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" [disabled]=\\\"hasApplied\\\"class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios1\\\" value=\\\"1\\\" checked=\\\"\\\"> 1\\n            </label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios2\\\" value=\\\"2\\\" [disabled]=\\\"hasApplied\\\"> 2\\n            </label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios2\\\" value=\\\"3\\\" [disabled]=\\\"hasApplied\\\"> 3\\n            </label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios2\\\" value=\\\"4\\\" [disabled]=\\\"hasApplied\\\"> 4\\n            </label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios2\\\" value=\\\"5\\\" [disabled]=\\\"hasApplied\\\"> 5\\n            </label>\\n            <br>\\n\\n          </div>\\n          <label class=\\\"form-check-label\\\">&nbsp;&nbsp;&nbsp;&nbsp;Skill:</label>\\n\\n          <input type=\\\"text\\\" id=\\\"skill\\\" name=\\\"skill\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"skill\\\" placeholder=\\\"Skill/s\\\" #skname=\\\"ngModel\\\"\\n            (keydown)=\\\"skillKeyFunction($event)\\\" [disabled]=\\\"hasApplied\\\" required>\\n            <small id=\\\"skillHelp\\\" class=\\\"form-text text-muted\\\">Select the Skill from 'SKILL REQUIRED BOX' and Select your scale. Then Press Enter to Load it to 'MY SKILL and RATING' section.</small><br>\\n          <!-- FIELD VALIDATOR -->\\n          <div *ngIf=\\\"skname.invalid && (skname.dirty || skname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n            <div *ngIf=\\\"skname.errors.required\\\">\\n              Atleast One Skill Set is required.\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"container\\\" style=\\\"width: 90%; padding-left: 70px; display: flex;\\\">\\n            <div style=\\\"width: 50%;\\\">\\n              <label class=\\\"form-check-label\\\">SKILLS REQUIRED</label>\\n              <select multiple=\\\"\\\" class=\\\"form-control\\\" [disabled]=\\\"hasApplied\\\">\\n                <option *ngFor=\\\"let s of skillSet\\\" (click)=\\\"onSkillClick($event, s)\\\">{{s}}</option>\\n              </select>\\n            </div>\\n            <div style=\\\"width: 50%; padding-left: 10px;\\\">\\n              <label class=\\\"form-check-label\\\">MY SKILLS and RATING</label>\\n              <select multiple=\\\"\\\" class=\\\"form-control\\\" [disabled]=\\\"hasApplied\\\">\\n                <option *ngFor=\\\"let ns of newSkillSet\\\" (click)=\\\"onSkillClick($event, ns)\\\">{{ns}}</option>\\n              </select>\\n          </div>\\n        </div>\\n        </div>\\n\\n\\n\\n      </div>\\n\\n\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\">Salary Expectation </label>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">CAD$</span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Amount (to the nearest CAD)\\\" id=\\\"salary\\\" name=\\\"salary\\\" required minlength=\\\"1\\\"\\n              appForbiddenName=\\\"0\\\" [disabled]=\\\"hasApplied\\\" placeholder=\\\"Salary\\\" [(ngModel)]=\\\"salary\\\" #sname=\\\"ngModel\\\" pattern=\\\"[0-9]*\\\" aria-describedby=\\\"salaryHelp\\\">\\n            <div class=\\\"input-group-append\\\">\\n              <span class=\\\"input-group-text\\\">.00</span>\\n            </div>\\n          </div>\\n          <small id=\\\"salaryHelp\\\" class=\\\"form-text text-muted\\\">Must not be more than the Salary Specifications for this job i.e. {{jobsalary}}</small>\\n        </div>\\n        <!-- FIELD VALIDATOR -->\\n        <div *ngIf=\\\"sname.invalid && (sname.dirty || sname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n          <div *ngIf=\\\"sname.errors.required\\\">\\n            Salary is required.\\n          </div>\\n          <div *ngIf=\\\"sname.errors.minlength\\\">\\n            Salary must be at least Single Digit.\\n          </div>\\n          <div *ngIf=\\\"sname.errors.forbiddenName\\\">\\n            Salary cannot be Zero. Salary must be greater than Zero.\\n          </div>\\n          <div *ngIf=\\\"sname.errors.pattern\\\">\\n            Salary must be only digits. Cannot be Zero or Decimal Values either.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <button type=\\\"button\\\" (click)=\\\"logout()\\\" class=\\\"btn btn-warning btn-lg\\\" value=\\\"LOGOUT\\\">LOGOUT</button>\\n      <input type=\\\"button\\\" (click)=\\\"close()\\\" class=\\\"btn btn-outline-warning btn-lg\\\" value=\\\"Close\\\">\\n      <input type=\\\"button\\\" (click)=\\\"apply()\\\" class=\\\"btn btn-success btn-lg\\\" value=\\\"Apply\\\" [disabled]=\\\"hasApplied\\\">\\n\\n    </div>\\n  </form>\\n</div>\\n\\n<div class=\\\"alert alert-dismissible alert-danger\\\" *ngIf=\\\"isEmpty\\\">\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" (click)=\\\"warnClose()\\\">&times;</button>\\n  <a href=\\\"/applDashboard\\\" class=\\\"alert-link\\\">{{message}}</a>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-apply/appl-apply.component.html\n// module id = ../../../../../src/app/applicant/appl-apply/appl-apply.component.html\n// module chunks = main","import { Component, OnInit, HostListener } from '@angular/core';\nimport { ApplApplyService } from './appl-apply.service';\nimport { AuthenticateComponent } from '../../authenticate.component';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { JobSchema, RequirementSchema } from '../../schemas/JobSchema';\nimport { DropdownQualSchema } from '../../schemas/DropdownSchema';\nimport { ApplicantSchema } from '../../schemas/ApplicantSchema';\nimport { HttpErrorResponse } from '../../../../node_modules/@angular/common/http';\n\n@Component({\n  selector: 'app-appl-apply',\n  templateUrl: './appl-apply.component.html',\n  styleUrls: ['./appl-apply.component.css'],\n  providers: [ApplApplyService]\n})\nexport class ApplApplyComponent implements OnInit {\n\n  sessionKey = \"\";\n  jobid: number = 0;\n  isDataAvailable: boolean = false;\n  message: string = \"Data is Currently UnAvailable. Click here to return to Dashboard.\";\n  jobs: any[];\n  jobname: string = \"\";\n  description: string = \"\";\n  contact: string = \"\";\n  email: string = \"\";\n  fullname: string = \"\";\n  jobsalary: number = 0;\n  salary: number = 0;\n\n  job: JobSchema = {\n    companyname: null,\n    jobname: null,\n    description: null,\n    salary: 0,\n    type: null,\n  };\n  req: any[];\n  reqs: RequirementSchema = {\n    id: 0,\n    jobid: 0,\n    qualification: null,\n    posses: false,\n    skill: null,\n    scale: 0\n  };\n  isEmpty: boolean = false;\n  degrees: any[];\n  skills: any[];\n  scale: number = 1;\n  scales = [];\n  skillSet = [];\n  skill: string = \"\";\n\n  newSkills: any[];\n  newScale: number = 1;\n  newScales = [];\n  newSkillSet = [];\n  newSkill: string = \"\";\n  count: number = 0;\n\n  degreesList = [{\n    \"id\": null,\n    \"qualName\": null\n  }];\n  selectedDegrees = [{\n    \"id\": null,\n    \"qualName\": null\n  }];\n  dropdownSettings = {\n    singleSelection: false,\n    text: \"Academic Qualifications\",\n    selectAllText: 'Select All',\n    unSelectAllText: 'UnSelect All',\n    enableSearchFilter: false,\n    classes: \"myclass custom-class\"\n  };\n\n  appl: ApplicantSchema = {\n    fullname: null,\n    email: null,\n    contact: null,\n    salary: null,\n    jobid: 0\n  }\n  hasApplied: boolean = false;\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private auth: AuthenticateComponent,\n    private applyService: ApplApplyService) {\n    //to check if current user is the active user\n    if (auth.isActiveUser('sessionID')) {\n      //continue using the session\n      console.log(\"Hi \" + sessionStorage.getItem('uname'));\n    } else {\n      //redirect to login screen\n      router.navigate(['./']);\n    }\n  }\n\n  async ngOnInit() {\n    //get jobId from parameter\n    this.route.params.subscribe(params => {\n\n      if (params.newcopy != undefined) {\n        history.pushState(null, null, location.href);\n        window.onpopstate = function () {\n          history.go(1);\n        };\n      }\n      let paramId: string = params.jobid;\n      this.jobid = +paramId.substr(1);\n      //populate the screen using the jobId\n      this.populate(this.jobid);\n    });\n  }\n\n  //to load the information onto the screen\n  async populate(jobid: number) {\n    this.degrees = [];\n    this.skills = [];\n    this.scales = [];\n    this.skillSet = [];\n    this.newSkillSet = [];\n    this.degreesList = [];\n    this.selectedDegrees = [];\n    this.skill = \"\";\n\n    await this.applyService.getJobById(jobid).then(data => {\n      this.job = data;\n      this.jobs = data;\n      //reqired to be displayed on UI\n      this.jobname = data.jobname;\n      this.description = data.description;\n      this.jobsalary = data.salary;\n      this.salary = data.salary;\n\n      //getting all the Requirements for this Job\n      this.applyService.getAllReqsById(jobid).then(result => {\n        this.reqs = result;\n        \n        for (let i = 0; i < result.length; i++) {\n          if (typeof (result[i].qualification) === 'string') {\n            const jsIn = { \"id\": (result[i].id), \"qualName\": (result[i].qualification) };\n            this.degreesList.push(jsIn);\n            this.selectedDegrees.push(jsIn);\n          }\n        }\n\n        for (let i = 0; i < result.length; i++) {\n          if (typeof (result[i].skill) === 'string') {\n            this.skills[i] = (result[i].skill);\n            this.skillSet.push(this.skills[i] + \" \" + this.scale);\n          }\n        }\n\n      });\n      this.isDataAvailable = true;\n    });\n\n  }\n\n  //Listener for Skill selection actions removing the scale info from string\n  onSkillClick(event, item) {\n    this.skill = item.slice(0, -2);\n  }\n\n  skillKeyFunction(event) {\n    if (event.keyCode == 13) {//push into array on Return Key Press\n\n      if (this.newSkillSet.length !== 0 && typeof this.newSkillSet !== undefined) {\n        if (this.newSkills.indexOf(this.skill) !== -1) {\n          const index = this.newSkills.indexOf(this.skill);\n          this.newScales[index] = this.scale;\n          this.newSkillSet[index] = this.skill + \" \" + this.scale;\n        } else {\n          this.newSkills.push(this.skill);\n          this.newScales.push(this.scale);\n          this.newSkillSet.push(this.skill + \" \" + this.scale);\n        }\n      } else {\n        this.newSkills = [];\n        this.newScales = [];\n        this.newSkillSet = [];\n        this.newSkills.push(this.skill);\n        this.newScales.push(this.scale);\n        this.newSkillSet.push(this.skill + \" \" + this.scale);\n      }\n\n    }\n\n  }\n\n  //Listener for Radio button presses\n  radioSkill(event) {\n    this.scale = event.target.value;\n  }\n\n\n  async apply() {\n    this.reqs = {};\n\n    //Checkinf if Expected Salary is less than Job Salary\n    if (this.salary > this.jobsalary) {\n      this.message = \"Salary Must be less than or equal to the Salary Specifications: CAD$\" + this.jobsalary + \". If you wish not to APPLY for this job, CLICK Here to return to Dashboard.\";\n      this.isEmpty = true;\n      return;\n    } else if ( //Checking of all fields are filled or not\n      ((this.fullname && this.email && this.contact && this.newSkills && this.newScales) === undefined)\n      || ((this.fullname && this.email && this.contact && this.newSkills && this.newScales) === null)\n      || ((this.fullname && this.email && this.contact) === '')\n      || ((this.selectedDegrees.length) === 0)\n      || ((this.newSkills.length) === 0)\n      || ((this.newScales.length) === 0)) {\n      this.isEmpty = true;\n      this.message = \" Please Fill all the Fields and Press 'APPLY' Button Again.\";\n      return;\n    } else { //All Valid information, so proceed to db\n      this.isEmpty = false;\n      this.message = \"\";\n      this.appl.fullname = this.fullname;\n      this.appl.email = this.email;\n      this.appl.contact = this.contact;\n      this.appl.salary = this.salary;\n      this.appl.jobid = this.jobid;\n      this.count = 0;\n\n      //adding the Applicant information into DB\n      await this.applyService.addApplicant(this.appl).then(async resp => {\n        if (resp.response === 'Applicant Already Exists.') {\n          this.isEmpty = true;\n          this.message = \"You have already applied for this job. Click here to return to dashboard and apply for other available jobs.\"\n        } else {\n          //adding the academic qualifications\n          for (let deg of this.selectedDegrees) {\n            this.reqs.jobid = this.jobid;\n            this.reqs.applid = resp.response;\n            this.reqs.qualification = deg.qualName;\n            this.reqs.posses = true;\n            \n            await this.applyService.addReq(this.reqs).then(result => {\n              if (!(result === undefined) && (result.response === \"Requirement Added Successfully\")) {\n                this.count++;\n              } else {\n                console.log(\"Response Error while adding Degrees: \" + result.response);\n              }\n            }).catch((err: HttpErrorResponse) => {\n              // Error logging\n              console.error('An error occurred:', err.error);\n              this.isEmpty = true;\n              this.message = \"Error Occured while adding Degrees. Click here to return to Dashboard and Apply again.\";\n              this.reqs = {};\n              return;\n            });\n            this.reqs = {};\n          }\n          //adding the skills\n          for(let i=0; i<this.newSkills.length;i++){\n            this.reqs.jobid = this.jobid;\n            this.reqs.applid = resp.response;\n            this.reqs.skill = this.newSkills[i];\n            this.reqs.scale = this.newScales[i];\n            await this.applyService.addReq(this.reqs).then(result => {\n              if (!(result === undefined) && (result.response === \"Requirement Added Successfully\")) {\n                this.count++;\n              } else {\n                console.log(\"Response Error while adding Skills: \" + result.response);\n              }\n            }).catch((err: HttpErrorResponse) => {\n              // Error logging\n              console.error('An error occurred:', err.error);\n              this.isEmpty = true;\n              this.message = \"Error Occured while adding Skills. Click here to return to Dashboard and Apply again.\";\n              this.reqs = {};\n              return;\n            });\n            this.reqs = {};\n          }\n          if (!(resp === undefined) && (this.count === (this.newSkills.length + this.selectedDegrees.length))) {\n            this.isEmpty = true;\n            this.hasApplied = true;\n            this.message = \" Job Applied Succesfully. Click here to return to DashBoard\";\n          } else {\n            this.isEmpty = true;\n            this.message = \"Job Application Failed. Please Re-Enter details and try submitting again\";\n          }\n        }\n\n      }).catch((err: HttpErrorResponse) => {\n        // Error logging\n        console.error('An error occurred:', err.error);\n        this.isEmpty = true;\n        this.message = \"Error Occured while applying. Click here to return to Dashboard and Apply again.\";\n        return;\n      });\n\n    }\n  }\n\n  //dropdown listeners\n  onItemSelect(item: any) {\n    console.log(\"Selected Degree: \" + JSON.stringify(item));\n    console.log(this.selectedDegrees);\n  }\n  OnItemDeSelect(item: any) {\n    console.log(\"Deselected Degree: \" + JSON.stringify(item));\n    console.log(this.selectedDegrees);\n  }\n  onSelectAll(items: any) {\n    console.log(\"Selected All Degrees: \" + JSON.stringify(items));\n  }\n  onDeSelectAll(items: any) {\n    console.log(\"Selected One of the Degrees: \" + JSON.stringify(items));\n  }\n\n  //to clear the array of blanks or null values\n  cleanArray(actual) {\n    var newArray = new Array();\n    for (var i = 0; i < actual.length; i++) {\n      if (actual[i]) {\n        newArray.push(actual[i]);\n      }\n    }\n    return newArray;\n  }\n\n  //button handler for closing the warning message\n  warnClose() {\n    this.isEmpty = false;\n    this.router.navigate(['/applDashboard']);\n  }\n\n  //button handler for CLOSE button\n  close(){\n    this.router.navigate(['/applDashboard']);\n  }\n\n  //button handler for LOGOUT button\n  logout() {\n    this.sessionKey = \"\";\n    this.auth.setCookie(this.sessionKey);\n    sessionStorage.setItem('uname', \"\");\n    this.router.navigate(['/']);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-apply/appl-apply.component.ts","import {\n  Injectable,\n  Inject\n} from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { ApplicantSchema } from '../../schemas/ApplicantSchema';\nimport { RequirementSchema } from '../../schemas/JobSchema';\n\n@Injectable()\nexport class ApplApplyService {\n\n  constructor(@Inject(HttpClient) private httpClient: HttpClient) { }\n\n  //get Job by ID\n  getJobById(id: number): Promise<any> {\n    const url = 'http://localhost:9090/api/company/jobId/'+ id;\n    return this.httpClient.get(url).toPromise();\n  }\n\n  //get All Requirements List by JobId\n  getAllReqsById(id: number): Promise<any> {\n    const url = 'http://localhost:9090/api/company/reqId/' + id;\n    return this.httpClient.get(url).toPromise();\n  }\n\n  //add Applicant\n  addApplicant(appl: ApplicantSchema): Promise<any> {\n    const url = 'http://localhost:9090/api/appl/addappl/';\n    return this.httpClient.post(url, appl).toPromise();\n  }\n\n  //add Requirements\n  addReq(req: RequirementSchema): Promise<any> {\n    const url = 'http://localhost:9090/api/company/addreq';\n    return this.httpClient.post(url, req).toPromise();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-apply/appl-apply.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container{\\n    padding: 10px;\\n}\\n\\n.jobs{\\n    overflow: auto;\\n    height: 350px;\\n}\\n\\n:host .form-check-label{\\n    padding-right: 120px;\\n}\\n\\n:host .container-content{\\n    width: 75%;\\n    padding-left: 250px;\\n}\\n\\nselect, option {\\n    display: -ms-flexbox;\\n    display: flex;\\n    text-align:right;   \\n}\\n\\ndiv.container-title {\\n    position: relative;\\n}\\n\\ndiv h1 {\\n    text-align: left;\\n    padding-left: 150px; \\n}\\n\\ndiv button {\\n    position: absolute;\\n    right: 10px;\\n    top: 5px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-dashboard/appl-dashboard.component.css\n// module id = ../../../../../src/app/applicant/appl-dashboard/appl-dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-title\\\">\\n  <h1>Applicants Dashboard\\n    <button type=\\\"button\\\" (click)=\\\"logout()\\\" class=\\\"btn btn-warning\\\" value=\\\"LOGOUT\\\">LOGOUT</button>\\n  </h1>\\n</div>\\n\\n<div class=\\\"container\\\">\\n\\n  <div class=\\\"container-content\\\">\\n\\n    <div class=\\\"form-group\\\">\\n\\n      <label class=\\\"col-form-label\\\">All Posted JOBS</label>\\n      <select class=\\\"form-control\\\" name=\\\"selectedJob\\\" [(ngModel)]=\\\"jobs\\\" required (change)=\\\"valueChange()\\\">\\n        <option *ngFor=\\\"let selectedJob of dispJobs\\\" [ngValue]=\\\"selectedJob\\\">\\n          JOB TITLE: {{selectedJob.jobname}} &nbsp;&nbsp;&nbsp;&nbsp; COMPANY: {{selectedJob.companyname}}\\n        </option>\\n      </select>\\n    </div>\\n\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-dashboard/appl-dashboard.component.html\n// module id = ../../../../../src/app/applicant/appl-dashboard/appl-dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApplDashboardService } from './appl-dashboard.service';\nimport { AuthenticateComponent } from '../../authenticate.component';\nimport { JobSchema } from '../../schemas/JobSchema';\n\n@Component({\n  selector: 'app-appl-dashboard',\n  templateUrl: './appl-dashboard.component.html',\n  styleUrls: ['./appl-dashboard.component.css'],\n  providers: [ApplDashboardService]\n})\nexport class ApplDashboardComponent implements OnInit {\n\n  sessionKey: string = \"\";\n  isDataAvailable: boolean = false;\n  dispJobs: any[];\n  jobs: JobSchema = {\n    companyname: null,\n    jobname: null,\n    description: null,\n    salary: 0,\n    type: null,\n  };\n  \n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private auth: AuthenticateComponent,\n    private applDashboardService: ApplDashboardService) {\n    //to check if current user is the active user\n    if (auth.isActiveUser('sessionID')) {\n      //continue using the session\n      console.log(\"Hi \" + sessionStorage.getItem('uname'));\n    } else {\n      //redirect to login screen\n      router.navigate(['./']);\n    }\n  }\n  \n  async ngOnInit() {\n    //getting all jobs from Server\n    await this.applDashboardService.getAllJobs().then(result => {\n      this.jobs = result;\n      this.dispJobs = result;\n      this.isDataAvailable = true;\n    });\n  }\n\n  //Listener for dropdown selections\n  valueChange(){\n    const jobid = this.jobs.id;\n    this.router.navigate(['/applJobInfo/:'+ jobid]);\n  }\n\n  //handler for LOGOUT button\n  logout() {\n    this.sessionKey = \"\";\n    this.auth.setCookie(this.sessionKey);\n    sessionStorage.setItem('uname', \"\");\n    this.router.navigate(['/']);\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-dashboard/appl-dashboard.component.ts","import {\n  Injectable,\n  Inject\n} from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse\n} from '@angular/common/http';\n\n@Injectable()\nexport class ApplDashboardService {\n\n  constructor(@Inject(HttpClient) private httpClient: HttpClient) { }\n\n  //get All Jobs List\n  getAllJobs(): Promise<any> {\n    const url = 'http://localhost:9090/api/company/jobs';\n    return this.httpClient.get(url).toPromise().catch(e => {\n      console.log(e);\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-dashboard/appl-dashboard.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container{\\n    padding: 10px;\\n}\\n\\n.placeRight{\\n    -ms-flex-line-pack: right;\\n        align-content: right;\\n}\\n\\ndiv.container-title {\\n    position: relative;\\n}\\n\\ndiv h1 {\\n    text-align: left;\\n    padding-left: 150px; \\n}\\n\\ndiv button {\\n    position: absolute;\\n    right: 10px;\\n    top: 5px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-jobinfo/appl-jobinfo.component.css\n// module id = ../../../../../src/app/applicant/appl-jobinfo/appl-jobinfo.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"isDataAvailable\\\">\\n\\n  <div class=\\\"jumbotron\\\">\\n    <h2 class=\\\"display-3\\\">{{job.jobname}}</h2>\\n    <h6 class=\\\"display-9\\\">COMPANY: {{job.companyname}}</h6>\\n    <hr class=\\\"my-4\\\">\\n    <p class=\\\"lead\\\">Job Description: </p>\\n    <p class=\\\"card-text\\\">\\n      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {{job.description}}\\n    </p>\\n    <p class=\\\"lead\\\">Salary: </p>\\n    <p class=\\\"card-text\\\">\\n      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {{job.salary}}\\n    </p>\\n    <p class=\\\"lead\\\">Job Type: </p>\\n    <p class=\\\"card-text\\\">\\n      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {{job.type}}\\n    </p>\\n    <p class=\\\"lead\\\">Academic Qualifications: </p>\\n    <p class=\\\"card-text\\\" *ngFor=\\\"let qual of degrees\\\">\\n      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {{qual}}\\n    </p>\\n    <p class=\\\"lead\\\">Required Skills: </p>\\n    <p class=\\\"card-text\\\" *ngFor=\\\"let sk of skills\\\">\\n      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {{sk}}\\n    </p>\\n    <p class=\\\"lead\\\">\\n      <button type=\\\"button\\\" (click)=\\\"logout()\\\" class=\\\"btn btn-warning\\\" value=\\\"LOGOUT\\\">LOGOUT</button>\\n      <input type=\\\"button\\\" class=\\\"btn btn-outline-warning btn-lg\\\" (click)=\\\"back()\\\" value=\\\"Back to Dashboard\\\">\\n      <input type=\\\"button\\\" class=\\\"btn btn-success btn-lg\\\" (click)=\\\"proceed()\\\" value=\\\"Proceed and Apply\\\">\\n    </p>\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"alert alert-dismissible alert-danger\\\" *ngIf=\\\"!isDataAvailable\\\">\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" (click)=\\\"warnClose()\\\">&times;</button>\\n  <a href=\\\"/applDashboard\\\" class=\\\"alert-link\\\">{{message}}</a>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-jobinfo/appl-jobinfo.component.html\n// module id = ../../../../../src/app/applicant/appl-jobinfo/appl-jobinfo.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ApplJobinfoService } from './appl-jobinfo.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticateComponent } from '../../authenticate.component';\nimport { RequirementSchema, JobSchema } from '../../schemas/JobSchema';\n\n@Component({\n  selector: 'app-appl-jobinfo',\n  templateUrl: './appl-jobinfo.component.html',\n  styleUrls: ['./appl-jobinfo.component.css'],\n  providers: [ApplJobinfoService]\n})\nexport class ApplJobinfoComponent implements OnInit {\n\n  sessionKey = \"\";\n  jobid: number = 0;\n  isDataAvailable: boolean = false;\n  message: string = \"Data is Currently UnAvailable. Click here to return to Dashboard.\";\n  jobs: any[];\n  job: JobSchema = {\n    companyname: null,\n    jobname: null,\n    description: null,\n    salary: 0,\n    type: null,\n  };\n  req: any[];\n  reqs: RequirementSchema = {\n    id: 0,\n    jobid: 0,\n    qualification: null,\n    posses: false,\n    skill: null,\n    scale: 0\n  };\n  isEmpty: boolean = false;\n  degrees: any[];\n  skills: any[];\n\n  constructor(private route: ActivatedRoute,\n    private router: Router,\n    private auth: AuthenticateComponent,\n    private jobinfoService: ApplJobinfoService) {\n    //to check if current user is the active user\n    if (auth.isActiveUser('sessionID')) {\n      //continue using the session\n      console.log(\"Hi \" + sessionStorage.getItem('uname'));\n    } else {\n      //redirect to login screen\n      router.navigate(['./']);\n    }\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n\n      if (params.newcopy != undefined) {\n        history.pushState(null, null, location.href);\n        window.onpopstate = function () {\n          history.go(1);\n        };\n      }\n      let paramId: string = params.jobid;\n      this.jobid = +paramId.substr(1);\n      //load the data onto the screen by using the jobid from param\n      this.loadScreen(this.jobid);\n    });\n  }\n\n  //fetching and loading the data onto screen using jobid\n  async loadScreen(jobid: number) {\n    this.degrees = [];\n    this.skills = [];\n    //fetching job information\n    await this.jobinfoService.getJobById(jobid).then(data => {\n      this.job = data;\n      this.jobinfoService.getAllReqsById(jobid).then(result => {\n        for(let i=0; i< result.length;i++){\n        this.degrees[i] = (result[i].qualification);\n        this.skills[i] = (result[i].skill);\n        }\n        this.degrees = this.cleanArray(this.degrees);\n        this.skills = this.cleanArray(this.skills);\n      });\n      this.isDataAvailable = true;\n    });\n  }\n\n  //Handler for PROCEED and APPLY button\n  proceed(){\n    this.router.navigate(['/applApply/:'+ this.jobid]);\n  }\n\n  //to clean the array of null or blank values\n  cleanArray(actual) {\n    var newArray = new Array();\n    for (var i = 0; i < actual.length; i++) {\n      if (actual[i]) {\n        newArray.push(actual[i]);\n      }\n    }\n    return newArray;\n  }\n\n  //handler for the Warnings\n  warnClose() {\n    this.isDataAvailable = false;\n    this.router.navigate(['/applDashboard']);\n  }\n\n  //handler for the Back button\n  back() {\n    this.router.navigate(['/applDashboard']);\n  }\n\n  //Handler for the LOGOUT button\n  logout() {\n    this.sessionKey = \"\";\n    this.auth.setCookie(this.sessionKey);\n    sessionStorage.setItem('uname', \"\");\n    this.router.navigate(['/']);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-jobinfo/appl-jobinfo.component.ts","import {\n  Injectable,\n  Inject\n} from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse\n} from '@angular/common/http';\n\n@Injectable()\nexport class ApplJobinfoService {\n\n  constructor(@Inject(HttpClient) private httpClient: HttpClient) { }\n\n  //get Job by ID\n  getJobById(id: number): Promise<any> {\n    const url = 'http://localhost:9090/api/company/jobId/'+ id;\n    return this.httpClient.get(url).toPromise().catch(e => {\n      console.log(e);\n    });\n  }\n\n  //get All Requirements List by JobId\n  getAllReqsById(id: number): Promise<any> {\n    const url = 'http://localhost:9090/api/company/reqId/' + id;\n    return this.httpClient.get(url).toPromise().catch(e => {\n      console.log(e);\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/applicant/appl-jobinfo/appl-jobinfo.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container{\\n    padding: 10px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/base/base.component.css\n// module id = ../../../../../src/app/auth/base/base.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg btn-block\\\" (click)=\\\"loginBtnClick()\\\">LOGIN</button>\\n  </div>\\n  <div class=\\\"container\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg btn-block\\\" (click)=\\\"registerBtnClick()\\\">REGISTER</button>\\n  </div>\\n  \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/base/base.component.html\n// module id = ../../../../../src/app/auth/base/base.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticateComponent } from '../../authenticate.component';\n\n@Component({\n  selector: 'app-base',\n  templateUrl: './base.component.html',\n  styleUrls: ['./base.component.css']\n})\nexport class BaseComponent implements OnInit {\n\n  sessionKey: string = \"\";\n  \n  constructor(private router: Router,\n    public auth: AuthenticateComponent) {\n    this.auth.setCookie(this.sessionKey);//clears the existing session details\n  }\n\n  ngOnInit() {\n    this.sessionKey = \"\";\n    this.auth.setCookie(this.sessionKey);\n    sessionStorage.setItem('uname', \"\");//clear the session storage information\n  }\n\n  //Handler for the LOGIN button\n  loginBtnClick() {\n    this.router.navigate(['/login']);\n  }\n\n  //Handler for the REGISTER Button\n  registerBtnClick() {\n    this.router.navigate(['/register']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/base/base.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/login/login.component.css\n// module id = ../../../../../src/app/auth/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\">Username</label>\\n          <input type=\\\"text\\\" id=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\" required minlength=\\\"4\\\" appForbiddenName=\\\"admin\\\" [(ngModel)]=\\\"username\\\"\\n            #uname=\\\"ngModel\\\">\\n          <!-- FIELD VALIDATOR -->\\n          <div *ngIf=\\\"uname.invalid && (uname.dirty || uname.touched)\\\" class=\\\"alert alert-danger\\\">\\n  \\n            <div *ngIf=\\\"uname.errors.required\\\">\\n              Name is required.\\n            </div>\\n            <div *ngIf=\\\"uname.errors.minlength\\\">\\n              Name must be at least 4 characters long.\\n            </div>\\n            <div *ngIf=\\\"uname.errors.forbiddenName\\\">\\n              Name cannot be Admin.\\n            </div>\\n  \\n          </div>\\n        </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label>Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]='password' name=\\\"password\\\" id=\\\"password\\\" required minlength=\\\"6\\\" placeholder=\\\"Password\\\"\\n          #pwd=\\\"ngModel\\\">\\n        <!-- FIELD VALIDATOR -->\\n        <div *ngIf=\\\"pwd.invalid && (pwd.dirty || pwd.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n          <div *ngIf=\\\"pwd.errors.required\\\">\\n            Password is required.\\n          </div>\\n          <div *ngIf=\\\"pwd.errors.minlength\\\">\\n            Password must be at least 6 characters long.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <input type=\\\"button\\\" (click)=\\\"login()\\\" class=\\\"btn btn-primary\\\" value=\\\"Login\\\">\\n      <input type=\\\"button\\\" (click)=\\\"back()\\\" class=\\\"btn btn-outline-warning\\\" value=\\\"Back\\\">\\n\\n    </div>\\n  </form>\\n</div>\\n\\n<div class=\\\"alert alert-dismissible alert-danger\\\" *ngIf=\\\"isEmpty\\\">\\n  <button type=\\\"button\\\" (click)=\\\"warnClose()\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n  <a href=\\\"/register\\\" class=\\\"alert-link\\\">{{message}}</a>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/login/login.component.html\n// module id = ../../../../../src/app/auth/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { AuthenticateComponent } from '../../authenticate.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers: [LoginService]\n})\nexport class LoginComponent implements OnInit {\n\n  username: string = \"\";\n  password: string = \"\";\n  sessionKey:string = \"\";\n  pwdChk: string = \"\";\n  unameChk: string = \"\";\n  role:string = \"\";  \n  company:string = \"\";\n  private message: string;\n  public isEmpty:boolean = false;\n\n  constructor(private loginService: LoginService,\n    private router: Router,\n    public auth: AuthenticateComponent) { \n      this.auth.setCookie(this.sessionKey);//clears the existing session details\n    }\n\n  ngOnInit() {\n    this.auth.setCookie(this.sessionKey);//clears the existing session details\n\n  }\n\n  //to add a new User\n  async login() {\n    //fetch user information from db and perform 'atob' operation to get String.\n    //simple Base64 encryption techniques.\n    await this.loginService.getUser(btoa(this.username)).then(resp => {\n      this.unameChk = atob(resp.username);\n      this.pwdChk = atob(resp.password);\n      this.role = resp.role;\n      this.company = resp.actualname;\n    });\n    \n    if((this.username === this.unameChk) && (this.password === this.pwdChk)){\n      //converting username & password to BASE64 values for simple authentication.\n      const uname = btoa(this.username);\n      const pwd = btoa(this.password);\n      this.sessionKey = btoa(uname + '??' + pwd);//btoa doesn't convert '??' to BASE64 value\n      //setting the credentials into cookies if match is found\n      this.auth.setCookie(this.sessionKey);\n      sessionStorage.setItem('uname', this.username);\n      this.isEmpty = false;\n      if(this.role === \"company\"){\n        sessionStorage.setItem('cname', this.company);\n        this.router.navigate(['/compDashboard']);\n      }else if(this.role === \"applicant\"){\n        sessionStorage.setItem('cname', \"Applicant\");\n        this.router.navigate(['/applDashboard']);\n      }else{\n        sessionStorage.setItem('cname', \"\");\n        this.router.navigate(['/']);\n      }\n    }else{\n      console.log(\"Login Failed: \");\n      //re-setting the credentials into cookies if match is not found\n      this.sessionKey = \"\";\n      this.auth.setCookie(this.sessionKey);\n      sessionStorage.setItem('uname', \"\");\n      this.isEmpty = true;\n      this.message = \"Please use correct User Name and Password.\"\n    }\n    \n  }  \n  \n  //button handler for closing the warning message\n  warnClose() {\n    this.isEmpty = false;\n    this.router.navigate(['/']);\n  }\n\n  //handler for BACK button\n  back() {\n    this.sessionKey = \"\";\n    this.auth.setCookie(this.sessionKey);\n    sessionStorage.setItem('uname', \"\");\n    this.router.navigate(['/']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/login/login.component.ts","import {  Injectable, \n          Inject }                      from '@angular/core';\nimport {  HttpClient, \n          HttpErrorResponse }           from '@angular/common/http';\nimport {  UserSchema }                  from \"../../schemas/UserSchema\";\n\n@Injectable()\nexport class LoginService {\n\n  constructor(@Inject(HttpClient) private httpClient: HttpClient) { }\n\n  //get UsersList\n  getUser(id: string): Promise<any> {\n    const url = 'http://localhost:9090/api/user/userId/';\n    return this.httpClient.get(url+id).toPromise().catch(e => {\n      console.log(e);\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/login/login.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".radioDiv{\\n    -ms-flex-line-pack: center;\\n        align-content: center;\\n}\\n:host .form-check-label{\\n    padding-right: 30px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/register/register.component.css\n// module id = ../../../../../src/app/auth/register/register.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n\\n  <form>\\n\\n    <input type=\\\"button\\\" (click)=\\\"isCompanyBtn()\\\" class=\\\"btn btn-primary btn-lg\\\" value=\\\"Enroll COMPANY\\\">\\n    <input type=\\\"button\\\" (click)=\\\"isApplicantBtn()\\\" class=\\\"btn btn-primary btn-lg\\\" value=\\\"Enroll APPLICANT\\\">\\n    <label class=\\\"form-label\\\">None of the Fields can be EMPTY</label>\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"form-group\\\" *ngIf=\\\"isApplicant\\\">\\n        <label class=\\\"col-form-label\\\">Fullname</label>\\n        <input id=\\\"fullname\\\" name=\\\"fullname\\\" class=\\\"form-control\\\" required minlength=\\\"4\\\" [(ngModel)]=\\\"fullname\\\" #fname=\\\"ngModel\\\">\\n        <!-- FIELD VALIDATOR -->\\n        <div *ngIf=\\\"fname.invalid && (fname.dirty || fname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n          <div *ngIf=\\\"fname.errors.required\\\">\\n            Full Name is required.\\n          </div>\\n          <div *ngIf=\\\"fname.errors.minlength\\\">\\n            Name must be at least 4 characters long.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" *ngIf=\\\"isCompany\\\">\\n        <label class=\\\"col-form-label\\\">Company Name</label>\\n        <input type=\\\"text\\\" id=\\\"companyName\\\" name=\\\"companyName\\\" class=\\\"form-control\\\" required minlength=\\\"4\\\" [(ngModel)]=\\\"companyName\\\"\\n          #cname=\\\"ngModel\\\">\\n        <!-- FIELD VALIDATOR -->\\n        <div *ngIf=\\\"cname.invalid && (cname.dirty || cname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n          <div *ngIf=\\\"cname.errors.required\\\">\\n            Company Name is required.\\n          </div>\\n          <div *ngIf=\\\"cname.errors.minlength\\\">\\n            Name must be at least 4 characters long.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-form-label\\\">Username</label>\\n        <input type=\\\"text\\\" id=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\" required minlength=\\\"4\\\" appForbiddenName=\\\"admin\\\" [(ngModel)]=\\\"username\\\"\\n          #uname=\\\"ngModel\\\">\\n        <!-- FIELD VALIDATOR -->\\n        <div *ngIf=\\\"uname.invalid && (uname.dirty || uname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n          <div *ngIf=\\\"uname.errors.required\\\">\\n            Name is required.\\n          </div>\\n          <div *ngIf=\\\"uname.errors.minlength\\\">\\n            Name must be at least 4 characters long.\\n          </div>\\n          <div *ngIf=\\\"uname.errors.forbiddenName\\\">\\n            Name cannot be Admin.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label>Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]='password' name=\\\"password\\\" id=\\\"password\\\" required minlength=\\\"6\\\" placeholder=\\\"Password\\\"\\n          #pwd=\\\"ngModel\\\">\\n        <!-- FIELD VALIDATOR -->\\n        <div *ngIf=\\\"pwd.invalid && (pwd.dirty || pwd.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n          <div *ngIf=\\\"pwd.errors.required\\\">\\n            Password is required.\\n          </div>\\n          <div *ngIf=\\\"pwd.errors.minlength\\\">\\n            Password must be at least 6 characters long.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n\\n      <input type=\\\"button\\\" (click)=\\\"enroll()\\\" class=\\\"btn btn-success\\\" value=\\\"ENROLL\\\">\\n      <input type=\\\"button\\\" (click)=\\\"back()\\\" class=\\\"btn btn-outline-warning\\\" value=\\\"Back\\\">\\n\\n    </div>\\n  </form>\\n</div>\\n\\n<div class=\\\"alert alert-dismissible alert-danger\\\" *ngIf=\\\"isEmpty\\\">\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" (click)=\\\"warnClose()\\\">&times;</button>\\n  <a href=\\\"/\\\" class=\\\"alert-link\\\">{{message}}</a>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/register/register.component.html\n// module id = ../../../../../src/app/auth/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { RegisterService } from './register.service';\nimport { AuthenticateComponent } from '../../authenticate.component';\nimport { Router } from '@angular/router';\nimport { UserSchema } from '../../schemas/UserSchema';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n  providers: [RegisterService]\n})\nexport class RegisterComponent implements OnInit {\n\n  public response: any;\n  private fullname: string;\n  private companyName: string;\n  private actualname: string;\n  private username: string;\n  private password: string;\n  public isCompany: boolean = true;\n  public isApplicant: boolean = false;\n  public isEmpty: boolean = false;\n  private role: string = 'company';//set 'company' or 'applicant'\n  private message: string;\n  private sessionKey: string = \"\";\n\n  user: UserSchema = {\n    id: null,\n    actualname: null,\n    username: null,\n    password: null,\n    role: null\n  };\n\n  constructor(\n    private registerService: RegisterService,\n    private router: Router,\n    private auth: AuthenticateComponent) {\n    this.auth.setCookie(this.sessionKey);//clears the existing session details\n  }\n\n  ngOnInit() {\n    this.isEmpty = false;\n  }\n\n  //handler for ENROLL COMPANY button.\n  isCompanyBtn() {\n    this.isCompany = true;\n    this.isApplicant = false;\n    this.role = \"company\";\n  }\n\n  //handler for ENROLL APPLICANT button\n  isApplicantBtn() {\n    this.isCompany = false;\n    this.isApplicant = true;\n    this.role = \"applicant\";\n  }\n\n  enroll() {\n    //setting the User values\n    //using simple encryption technique: BASE64 btoa<->atob conversion\n    (this.isCompany) ? (this.actualname = this.companyName) : (this.actualname = this.fullname);\n    this.user.actualname = this.actualname;\n    this.user.username = btoa(this.username);\n    this.user.password = btoa(this.password);\n    this.user.role = this.role;\n    //checking if all fields are filled\n    if (\n      ((this.username && this.password && this.role && this.actualname) === undefined)\n      || ((this.username && this.password && this.role && this.actualname) === null)\n      || ((this.username && this.password && this.role && this.actualname) === '')) {\n      this.isEmpty = true;\n      this.message = \"Some Fields seem to be empty. Fill in all the fields and try submitting again.\";\n    } else {\n      this.isEmpty = true;\n      //adding user to database\n      this.registerService.addUser(this.user).then(resp => {\n        if (!(resp === undefined) && (resp.response === \"User Created Successfully. \")) {\n          this.message = \" User Created Succesfully. Please go to Login Page.\";\n        } else {\n          this.message = \"User Creation Failed. Please Re-Enter details and try submitting again\";\n        }\n      })\n    }\n\n  }\n\n  //handler for BACK button\n  back() {\n    this.sessionKey = \"\";\n    this.auth.setCookie(this.sessionKey);\n    sessionStorage.setItem('uname', \"\");\n    this.router.navigate(['/']);\n  }\n\n  //handler for the error warning close button\n  warnClose() {\n    this.isEmpty = false;\n    this.router.navigate(['/']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/register/register.component.ts","import {  Injectable, \n          Inject }                      from '@angular/core';\nimport {  HttpClient, \n          HttpErrorResponse }           from '@angular/common/http';\nimport {  UserSchema }                  from \"../../schemas/UserSchema\";\n\n@Injectable()\nexport class RegisterService {\n\n  constructor(@Inject(HttpClient) private httpClient: HttpClient) { }\n\n  //add Users\n  addUser(user: UserSchema): Promise<any> {\n    const url = 'http://localhost:9090/api/user/adduser';\n    return this.httpClient.post(url, user).toPromise().catch((err: HttpErrorResponse) => {\n      // Error logging\n      console.error('An error occurred:', err.error);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/auth/register/register.service.ts","import { Cookie } from 'ng2-cookies/ng2-cookies';\n\n\nexport class AuthenticateComponent {\n\n    session: any;\n    currentUser: string;\n\n    //set the session Cookie\n    setCookie(sessionKey) {\n        Cookie.set('sessionID', sessionKey);\n    }\n\n    //retuen the session Cookie\n    getCookie(sessionID: string) {\n        this.session = Cookie.get(sessionID);\n        return this.session\n    }\n\n    //retrns the current User\n    isActiveUser(sessionID: string) {\n        this.getSessionUser(sessionID);\n        if ((this.getSessionUser(sessionID).length === 0) || (sessionStorage.getItem('uname').length === 0)) {\n            return false;\n        }else if (this.getSessionUser(sessionID) === sessionStorage.getItem('uname')) {\n            return true;\n        } \n    }\n\n    //returns the session Username\n    getSessionUser(sessionID: string) {\n        this.session = Cookie.get(sessionID);\n        let uname = atob(atob(this.session).split('??')[0]);\n        return uname;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/authenticate.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container{\\n    padding: 10px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/comp-dashboard/comp-dashboard.component.css\n// module id = ../../../../../src/app/company/comp-dashboard/comp-dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-lg btn-block\\\" (click)=\\\"allJobsBtnClick()\\\">SEE APPLICANTS</button>\\n</div>\\n<div class=\\\"container\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-lg btn-block\\\" (click)=\\\"postJobBtnClick()\\\">POST NEW JOB</button>\\n</div>\\n<div class=\\\"container\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-lg btn-block\\\" (click)=\\\"editJobBtnClick()\\\">EDIT EXISITNG JOB</button>\\n</div>\\n<div class=\\\"container\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-warning\\\" (click)=\\\"back()\\\">BACK/ LOGOUT</button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/comp-dashboard/comp-dashboard.component.html\n// module id = ../../../../../src/app/company/comp-dashboard/comp-dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticateComponent } from '../../authenticate.component';\n\n@Component({\n  selector: 'app-comp-dashboard',\n  templateUrl: './comp-dashboard.component.html',\n  styleUrls: ['./comp-dashboard.component.css']\n})\nexport class CompDashboardComponent implements OnInit {\n  \n  sessionKey: string = \"\";\n  \n  constructor(private router: Router,\n    private auth: AuthenticateComponent) {\n      //to check if current user is the active user\n    if (auth.isActiveUser('sessionID')) {\n     //continue using the session\n     console.log(\"Hi \" + sessionStorage.getItem('uname'));\n    } else{\n      //redirect to login screen\n      router.navigate(['./']);\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  //handler for POST NEW JOB button\n  postJobBtnClick() {\n    this.router.navigate(['/postJob']);\n  }\n\n  //handler for EDIT EXISTING JOB button\n  editJobBtnClick() {\n    this.router.navigate(['/editJob']);\n  }\n\n  //handler for SEE APPLICANTS button\n  allJobsBtnClick() {\n    this.router.navigate(['/listJobs']);\n  }\n\n  //handler for BACK button\n  back() {\n    this.sessionKey = \"\";\n    this.auth.setCookie(this.sessionKey);\n    sessionStorage.setItem('uname', \"\");\n    this.router.navigate(['/']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/comp-dashboard/comp-dashboard.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host .form-check-label{\\n    padding-right: 120px;\\n}\\n\\n:host .container-content{\\n    position: absolute;\\n    padding-left: 40%; \\n}\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/edit-job/edit-job.component.css\n// module id = ../../../../../src/app/company/edit-job/edit-job.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Edit Existing Job</h1>\\n</div>\\n\\n<div class=\\\"container-content\\\" *ngIf=\\\"!hasData\\\">\\n\\n  <div class=\\\"form-group\\\" *ngIf=\\\"isDataAvailable\\\">\\n\\n    <label  class=\\\"col-form-label\\\">Click Here to see the list of all Posted JOBS</label>\\n    <select class=\\\"form-control\\\" name=\\\"selectedJob\\\" [(ngModel)]=\\\"oldJob\\\" required (change)=\\\"valueChange()\\\">\\n      <option *ngFor=\\\"let selectedJob of jobs\\\" [ngValue]=\\\"selectedJob\\\"> {{selectedJob.jobname}} </option>\\n    </select>\\n  </div>\\n    <input type=\\\"button\\\" (click)=\\\"back()\\\" class=\\\"btn btn-outline-warning\\\" value=\\\"Back To Dashboard\\\">\\n\\n</div>\\n\\n\\n<div class=\\\"container\\\" *ngIf=\\\"hasData\\\">\\n  <form>\\n\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-form-label\\\">Job Role</label>\\n        <input id=\\\"jobname\\\" name=\\\"jobname\\\" class=\\\"form-control\\\" required minlength=\\\"2\\\" [(ngModel)]=\\\"jobname\\\" placeholder=\\\"Job Role\\\"\\n          #jname=\\\"ngModel\\\" disabled>\\n          <small id=\\\"jobHelp\\\" class=\\\"form-text text-muted\\\">Role of this job.</small>\\n        <!-- FIELD VALIDATOR -->\\n        <div *ngIf=\\\"jname.invalid && (jname.dirty || jname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n          <div *ngIf=\\\"jname.errors.required\\\">\\n            Job Role is required.\\n          </div>\\n          <div *ngIf=\\\"jname.errors.minlength\\\">\\n            Job Role must be at least 2 characters long.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-form-label\\\">Job Description</label>\\n        <textarea id=\\\"description\\\" rows=\\\"2\\\" name=\\\"description\\\" class=\\\"form-control\\\" required minlength=\\\"4\\\" placeholder=\\\"Job Description\\\"\\n          [(ngModel)]=\\\"description\\\" #dname=\\\"ngModel\\\" disabled></textarea>\\n          <small id=\\\"descHelp\\\" class=\\\"form-text text-muted\\\">A Brief description regarding this job.</small>\\n          <!-- FIELD VALIDATOR -->\\n        <div *ngIf=\\\"dname.invalid && (dname.dirty || dname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n          <div *ngIf=\\\"dname.errors.required\\\">\\n            Job Description is required.\\n          </div>\\n          <div *ngIf=\\\"dname.errors.minlength\\\">\\n            Job Description must be at least 4 characters long.\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\">Job Type</label>\\n          <div class=\\\"form-check\\\" (click)=\\\"radioType($event)\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadis\\\" id=\\\"optionsRadis1\\\" value=\\\"full-time\\\" checked=\\\"\\\"> Full Time\\n            </label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadis\\\" id=\\\"optionsRadis2\\\" value=\\\"part-time\\\"> Part Time\\n            </label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadis\\\" id=\\\"optionsRadis2\\\" value=\\\"contract\\\"> Contract\\n            </label>\\n\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\">Required Academic Degree/s</label>\\n          <input type=\\\"text\\\" id=\\\"degree\\\" name=\\\"degree\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"degree\\\" placeholder=\\\"Academic Degrees\\\" #degname=\\\"ngModel\\\"\\n            (keydown)=\\\"degreeKeyFunction($event)\\\" required>\\n            <small id=\\\"degreeHelp\\\" class=\\\"form-text text-muted\\\">Type the name of Required Academic Degree. Press Enter to push into the 'Academic Qualifications' section.</small>\\n            <!-- FIELD VALIDATOR -->\\n          <div *ngIf=\\\"degname.invalid && (degname.dirty || degname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n            <div *ngIf=\\\"degname.errors.required\\\">\\n              Academic Qualification is required.\\n            </div>\\n\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"hasDegrees\\\" style=\\\"width: 90%; padding-left: 70px;\\\">\\n            <label class=\\\"form-check-label\\\">Academic Qualifications</label>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" (click)=\\\"closeDegree()\\\">&times;</button>\\n          <select multiple=\\\"\\\" class=\\\"form-control\\\">\\n            <option *ngFor=\\\"let d of degrees\\\">{{d}}</option>\\n          </select>\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\">Required Skill/s [5 - Expert .... 1 - Novice]</label>\\n          <div class=\\\"form-check\\\" (click)=\\\"radioSkill($event)\\\">\\n            <label class=\\\"form-check-label\\\">Scale of Each Skill</label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios1\\\" value=\\\"1\\\" checked=\\\"\\\"> 1\\n            </label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios2\\\" value=\\\"2\\\"> 2\\n            </label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios2\\\" value=\\\"3\\\"> 3\\n            </label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios2\\\" value=\\\"4\\\"> 4\\n            </label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios2\\\" value=\\\"5\\\"> 5\\n            </label>\\n            <br>\\n\\n          </div>\\n          <label class=\\\"form-check-label\\\">&nbsp;&nbsp;&nbsp;&nbsp;Skill</label>\\n\\n          <input type=\\\"text\\\" id=\\\"skill\\\" name=\\\"skill\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"skill\\\" placeholder=\\\"Skill/s\\\" #skname=\\\"ngModel\\\"\\n            (keydown)=\\\"skillKeyFunction($event)\\\" required>\\n            <small id=\\\"skillHelp\\\" class=\\\"form-text text-muted\\\">Select the required Skill from the 'SKILLS' box and select the desired Scale. Press Enter to push into the 'SKILLS' section.</small>\\n            <!-- FIELD VALIDATOR -->\\n          <div *ngIf=\\\"skname.invalid && (skname.dirty || skname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n            <div *ngIf=\\\"skname.errors.required\\\">\\n              Atleast One Skill Set is required.\\n            </div>\\n\\n          </div>\\n\\n        </div>\\n\\n        <div *ngIf=\\\"hasSkills\\\" style=\\\"width: 90%; padding-left: 70px;\\\">\\n            <label class=\\\"form-check-label\\\">SKILLS</label>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" (click)=\\\"closeSkill()\\\">&times;</button>\\n          <select multiple=\\\"\\\" class=\\\"form-control\\\">\\n            <option *ngFor=\\\"let s of skillSet\\\">{{s}}</option>\\n          </select>\\n        </div>\\n        \\n      </div>\\n        <small  *ngIf=\\\"hasSkills\\\" style=\\\"width: 90%; padding-left: 70px;\\\" id=\\\"skillBoxHelp\\\" class=\\\"form-text text-muted\\\">Select Skill from here if you wish to edit the scale value.</small>\\n\\n\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\">Salary</label>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">CAD$</span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Amount (to the nearest CAD)\\\" id=\\\"salary\\\" name=\\\"salary\\\" required minlength=\\\"1\\\"\\n              appForbiddenName=\\\"0\\\" placeholder=\\\"Salary\\\" [(ngModel)]=\\\"salary\\\" #sname=\\\"ngModel\\\" pattern=\\\"[0-9]*\\\">\\n              <div class=\\\"input-group-append\\\">\\n              <span class=\\\"input-group-text\\\">.00</span>\\n            </div>\\n          </div>\\n        </div>\\n        <small id=\\\"salaryHelp\\\" class=\\\"form-text text-muted\\\">Salary can be any non decimal value except Zero.</small>\\n        <!-- FIELD VALIDATOR -->\\n        <div *ngIf=\\\"sname.invalid && (sname.dirty || sname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n          <div *ngIf=\\\"sname.errors.required\\\">\\n            Salary is required.\\n          </div>\\n          <div *ngIf=\\\"sname.errors.minlength\\\">\\n            Salary must be at least Single Digit.\\n          </div>\\n          <div *ngIf=\\\"sname.errors.forbiddenName\\\">\\n            Salary cannot be Zero. Salary must be greater than Zero.\\n          </div>\\n          <div *ngIf=\\\"sname.errors.pattern\\\">\\n            Salary must be only digits. Cannot be Zero or Decimal Values either.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n\\n      <button type=\\\"button\\\" (click)=\\\"logout()\\\" class=\\\"btn btn-warning\\\" value=\\\"LOGOUT\\\">LOGOUT</button>\\n      <input type=\\\"button\\\" (click)=\\\"close()\\\" class=\\\"btn btn-outline-warning\\\" value=\\\"Close\\\">\\n      <input type=\\\"button\\\" (click)=\\\"editJob()\\\" class=\\\"btn btn-success\\\" value=\\\"Edit Job\\\">\\n\\n    </div>\\n  </form>\\n</div>\\n\\n<div class=\\\"alert alert-dismissible alert-danger\\\" *ngIf=\\\"isEmpty\\\">\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" (click)=\\\"warnClose()\\\">&times;</button>\\n  <a href=\\\"/compDashboard\\\" class=\\\"alert-link\\\">{{message}}</a>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/edit-job/edit-job.component.html\n// module id = ../../../../../src/app/company/edit-job/edit-job.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { EditJobService } from './edit-job.service';\nimport { Router } from '@angular/router';\nimport { AuthenticateComponent } from '../../authenticate.component';\nimport { JobSchema, RequirementSchema } from '../../schemas/JobSchema';\n\n@Component({\n  selector: 'app-edit-job',\n  templateUrl: './edit-job.component.html',\n  styleUrls: ['./edit-job.component.css'],\n  providers: [EditJobService]\n})\nexport class EditJobComponent implements OnInit {\n\n  sessionKey = \"\";\n  hasData: Boolean = false;\n  companyname: string = \"\";\n  jobname: string = \"\";\n  description: string = \"\";\n  salary: number;\n  degree: string = \"\";\n  hasDegrees: boolean = false;\n  degrees = [];\n  skill: string = \"\";\n  hasSkills: boolean = false;\n  skills = [];\n  scale: number = 1;\n  scales = [];\n  skillSet = [];\n  type = \"full-time\";\n  jobid: number;\n  jobs: any[];\n  reqs: any[];\n  oldJob: JobSchema = {\n    companyname: null,\n    jobname: null,\n    description: null,\n    salary: 0,\n    type: null,\n  };\n  oldReq: any[];\n  oldReqs: RequirementSchema = {\n    id: 0,\n    jobid: 0,\n    qualification: null,\n    posses: false,\n    skill: null,\n    scale: 0\n  };\n  message: string = \"\";\n  isEmpty: boolean = false;\n  isValid: boolean = false;\n  isDataAvailable: boolean = false;\n\n  //to store new Values\n  oldDegrees = [];\n  newDegrees = [];\n  oldSkills = [];\n  newSkills = [];\n  oldScales = [];\n  newScales = [];\n  reqsMap: Map<number, JobSchema[]> = new Map<number, JobSchema[]>();\n  newJob: JobSchema = {\n    companyname: null,\n    jobname: null,\n    description: null,\n    salary: 0,\n    type: null,\n  };\n  newReq: RequirementSchema = {\n    jobid: 0,\n    qualification: null,\n    posses: false,\n    skill: null,\n    scale: 0\n  };\n\n  constructor(private editJobService: EditJobService,\n    private router: Router,\n    private auth: AuthenticateComponent) {\n      //to check if current user is the active user\n    if (auth.isActiveUser('sessionID')) {\n      //continue using the session\n      console.log(\"Hi \" + sessionStorage.getItem('uname'));\n      //get the companyname from session for which this user is associated\n      this.companyname = sessionStorage.getItem('cname');\n    } else {\n      //redirect to login screen\n      router.navigate(['./']);\n    }\n  }\n\n  async ngOnInit() {\n    //getting all jobs from Server using the companyname of the loggedin user from the session information\n    await this.editJobService.getAllJobsByCompany(this.companyname).then(result => {\n      this.oldJob = result;\n      this.jobs = result;\n      this.isDataAvailable = true;\n    });\n  }\n\n  //validate the inputs and make the changes accordingly\n  async editJob() {\n    if (\n      ((this.jobname && this.description && this.salary && this.degree && this.skill && this.scale) === undefined)\n      || ((this.jobname && this.description && this.salary && this.degree && this.skill && this.scale) === null)\n      || ((this.jobname && this.description && this.salary && this.degree && this.skill) === '')\n      || ((this.skills.length) === 0)\n      || ((this.scales.length) === 0)) {\n      this.isValid = false\n    }\n    else {\n      this.isValid = true;\n      if (this.degrees.indexOf(this.degree) !== -1) {\n        const index = this.degrees.indexOf(this.degree);\n        this.degrees[index] = this.degree;\n      }\n      if (this.skills.indexOf(this.skill) !== -1) {\n        const index = this.skills.indexOf(this.skill);\n        this.skills[index] = this.skill;\n      }\n\n    }\n\n    if (this.isValid) {\n      this.newDegrees = this.cleanArray(this.degrees);\n      this.newSkills = this.cleanArray(this.skills);\n      this.newScales = this.cleanArray(this.scales);\n      this.newJob.companyname = this.companyname;\n      this.newJob.jobname = this.jobname;\n      this.newJob.description = this.description;\n      this.newJob.salary = this.salary;\n      this.newJob.type = this.type;\n      //pushing the edited job information\n      await this.editJobService.editJob(this.newJob).then(async resp => {\n        //Update if found in Old Job Req Data else Insert. If Old req data is not in new ones then Delete thm frm db.\n        for (let deg of this.newDegrees) {\n          if (this.oldDegrees.indexOf(deg) !== -1) {//match is found in oldDegrees\n            //do no update\n          } else {//match is fount in newDegrees\n            //do insert\n            this.newReq.jobid = this.oldJob.id;\n            this.newReq.qualification = deg;\n            const index = this.oldDegrees.indexOf(deg);\n            await this.editJobService.addReq(this.newReq).then(result => {\n              console.log(\"Response of Degrees updation: \" + JSON.stringify(result));\n            });\n            this.newReq = {};\n          }\n        }\n        //if old degrees are not found in new ones then they vl b deleted.\n        for (let deg of this.oldDegrees) {\n\n          if (this.newDegrees.indexOf(deg) !== -1) {//match is found in newDegrees\n            const index = this.newDegrees.indexOf(deg);\n          } else {\n            for (let element of this.oldReq) {\n\n              if (element.qualification === deg) {\n                const id = element.id;\n                const index = this.newDegrees.indexOf(deg);\n                await this.editJobService.delReq(id).then(result => {\n                  console.log(\"Response of Degrees updation: \" + JSON.stringify(result));\n                });\n              }\n            }\n          }\n          this.newReq = {};\n        }\n\n        //Update if found in Old Job Req Data else Insert. If Old req data is not in new ones then Delete thm frm db.\n        for (var i = 0; i < this.newSkills.length; i++) {\n\n          if (this.oldSkills.indexOf(this.newSkills[i]) !== -1) {//match found in oldSkills\n            const index = this.oldSkills.indexOf(this.newSkills[i]);\n            //check for scale\n            if (this.newScales[i] == this.oldScales[index]) {\n              //do no update\n            } else {\n              //do update\n              this.newReq.id = this.oldReq[i].id;\n              this.newReq.jobid = this.oldJob.id;\n              this.newReq.skill = this.newSkills[i];\n              this.newReq.scale = this.newScales[i];\n              await this.editJobService.editJobReq(this.newReq).then(result => {\n                console.log(\"Response of Skill Updation: \" + JSON.stringify(result));\n              });\n              this.newReq = {};\n            }\n          } else {\n            //do insert\n            this.newReq.jobid = this.oldJob.id;\n            this.newReq.skill = this.skills[i];\n            this.newReq.scale = this.scales[i];\n            const index = this.oldSkills.indexOf(this.newSkills[i]);\n            await this.editJobService.addReq(this.newReq).then(result => {\n              console.log(\"Response for New Skill addition: \" + JSON.stringify(result));\n            });\n            this.newReq = {};\n          }\n        }\n\n        for (var i = 0; i < this.oldSkills.length; i++) {\n          if (this.newSkills.indexOf(this.oldSkills[i]) !== -1) {//found in newSkills so do nothing\n            //do no delete\n          } else {\n            //delete from db\n            const id = this.oldReq[i].id;\n            this.editJobService.delReq(id).then(result =>{\n              console.log(\"Response for Removal of Skills: \" + JSON.stringify(result));\n            });\n          }\n        }\n\n        if (!(resp === undefined)) {\n          this.isEmpty = true;\n          this.message = \" Job Updated Succesfully. Click here to return to DashBoard\";\n        } else {\n          this.isEmpty = true;\n          this.message = \"Job Updation Failed. Please Re-Enter details and try creating new Job posting again\";\n        }\n      });\n\n    } else {\n      this.isEmpty = true;\n      this.message = \" Please Fill all the Fields and Press 'Edit Job' Button Again\"\n    }\n  }\n\n  //Listener for the dropdown menu\n  async valueChange() {\n    this.newReq = {};\n    this.degrees = [];\n    this.skills = [];\n    this.scales = [];\n    this.skillSet = [];\n    this.degree = \"\";\n    this.skill = \"\";\n    this.hasData = true;\n    const pivot = this.oldJob.id;\n\n    //fetching the information regading the selected job\n    await this.editJobService.getAllReqsById(pivot).then(reqData => {\n      this.oldReq = reqData;\n      for (var i = 0; i < reqData.length; i++) {\n        this.oldReq[i].id = reqData[i].id;\n        this.oldReq[i].qualification = reqData[i].qualification;\n        if (reqData[i].qualification === null) {\n        } else {\n          this.degrees[i] = (reqData[i].qualification);\n          this.oldDegrees[i] = (reqData[i].qualification);\n          this.degree = (reqData[i].qualification);\n        }\n\n        if (reqData[i].skill === null) {\n        } else {\n          this.skills[i] = (reqData[i].skill);\n          this.oldSkills[i] = (reqData[i].skill);\n          this.skill = (reqData[i].skill);\n        }\n\n        if (reqData[i].scale == 0) {\n        } else {\n          this.scales[i] = (reqData[i].scale);\n          this.oldScales[i] = (reqData[i].scale);\n          this.skillSet.push(this.skills[i] + \" \" + this.scales[i]);\n          this.reqsMap.set(reqData[i].id, this.skillSet[i]);\n        }\n        this.hasDegrees = true;\n        this.hasSkills = true;\n\n      }\n      //removing blanks from Degrees & SkillSet\n      this.degrees = this.cleanArray(this.degrees);\n      this.oldDegrees = this.cleanArray(this.oldDegrees);\n\n      this.skills = this.cleanArray(this.skills);\n      this.oldSkills = this.cleanArray(this.oldSkills);\n\n      this.scales = this.cleanArray(this.scales);\n      this.oldScales = this.cleanArray(this.oldScales);\n    });\n\n    //let reqsMap: Map<number, JobSchema[]> = new Map<number, JobSchema[]>();\n    //setting values in UI\n    for (var i = 0; i < this.jobs.length; i++) {\n      if (this.jobs[i].id == pivot) {\n        this.jobname = this.jobs[i].jobname;\n        this.description = this.jobs[i].description;\n        this.type = this.jobs[i].type;\n        this.salary = this.jobs[i].salary;\n      }\n    }\n  }\n\n  //to remoev null and blanks from the arrays\n  cleanArray(actual) {\n    var newArray = new Array();\n    for (var i = 0; i < actual.length; i++) {\n      if (actual[i]) {\n        newArray.push(actual[i]);\n      }\n    }\n    return newArray;\n  }\n\n  //handler for the BACK button\n  back() {\n    this.router.navigate(['/compDashboard']);\n  }\n\n  //handler for the CLOSE button\n  close() {\n    this.hasData = false;\n    this.isEmpty = false;\n  }\n\n  //Listerner for the degrees key press events\n  degreeKeyFunction(event) {\n    if (event.keyCode == 13) {\n      this.hasDegrees = true;\n      this.degrees.push(this.degree);\n    }\n  }\n  closeDegree() {\n    this.hasDegrees = false;\n    this.degrees = [];\n  }\n\n  //pushes the selected skill into the array\n  skillKeyFunction(event) {\n    if (event.keyCode == 13) {\n      this.hasSkills = true;\n\n      if (this.skills.indexOf(this.skill) !== -1) {\n        const index = this.skills.indexOf(this.skill);\n        this.scales[index] = this.scale;\n        this.skillSet[index] = this.skill + \" \" + this.scale;\n      } else {\n        this.skills.push(this.skill);\n        this.scales.push(this.scale);\n        this.skillSet.push(this.skill + \" \" + this.scale);\n      }\n\n    }\n\n  }\n  //closes the SKILLs box\n  closeSkill() {\n    this.hasSkills = false;\n    this.skills = [];\n    this.scales = [];\n    this.skillSet = [];\n\n  }\n\n  //Listeners for the scale radio\n  radioSkill(event) {\n    this.scale = event.target.value;\n  }\n\n  //listeners for the Job type radios\n  radioType(event) {\n    this.type = event.target.value;\n  }\n\n  //closes the warning bar\n  warnClose() {\n    this.isEmpty = false;\n    this.router.navigate(['/compDashboard']);\n  }\n\n  //handler for the LOGOUT button\n  logout() {\n    this.sessionKey = \"\";\n    this.auth.setCookie(this.sessionKey);\n    sessionStorage.setItem('uname', \"\");\n    this.router.navigate(['/']);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/edit-job/edit-job.component.ts","import {\n  Injectable,\n  Inject\n} from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { JobSchema, RequirementSchema } from '../../schemas/JobSchema';\n\n@Injectable()\nexport class EditJobService {\n\n  constructor(@Inject(HttpClient) private httpClient: HttpClient) { }\n\n  //get All Jobs List\n  getAllJobs(): Promise<any> {\n    const url = 'http://localhost:9090/api/company/jobs';\n    return this.httpClient.get(url).toPromise().catch(e => {\n      console.log(e);\n    });\n  }\n\n  //get All Jobs List for this comapny\n  getAllJobsByCompany(company: string): Promise<any> {\n    const url = 'http://localhost:9090/api/company/jobsByCompany/' + company;\n    return this.httpClient.get(url).toPromise().catch(e => {\n      console.log(e);\n    });\n  }\n\n  //get All Requirements List by JobId\n  getAllReqsById(id: any): Promise<any> {\n    const url = 'http://localhost:9090/api/company/reqId/' + id;\n    return this.httpClient.get(url).toPromise().catch(e => {\n      console.log(e);\n    });\n  }\n\n  //edit Job\n  editJob(job: JobSchema): Promise<any> {\n    const url = 'http://localhost:9090/api/company/updateJob';\n    return this.httpClient.put(url, job).toPromise().catch((err: HttpErrorResponse) => {\n      // Error loggin\n      console.error('An error occurred:', err.error);\n    });\n  }\n\n  //edit Job Requirement\n  editJobReq(req: RequirementSchema): Promise<any> {\n    const url = 'http://localhost:9090/api/company/updateJobReq';\n    return this.httpClient.put(url, req).toPromise().catch((err: HttpErrorResponse) => {\n      // Error logging\n      console.error('An error occurred:', err.error);\n    });\n  }\n\n  //add Requirements\n  addReq(req: RequirementSchema): Promise<any> {\n    const url = 'http://localhost:9090/api/company/addreq';\n    return this.httpClient.post(url, req).toPromise().catch((err: HttpErrorResponse) => {\n      // error loggin\n      console.error('An error occurred:', err.error);\n    });\n  }\n\n  //delete Requirements\n  delReq(id: any): Promise<any> {\n    const url = 'http://localhost:9090/api/company/delReq/' + id;\n    return this.httpClient.delete(url).toPromise().catch((err: HttpErrorResponse) => {\n      // Error logging\n      console.error('An error occurred:', err.error);\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/edit-job/edit-job.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host .form-check-label{\\n    padding-right: 120px;\\n}\\n\\n:host .container-list{\\n    position: absolute;\\n    padding-left: 25%; \\n}\\n\\n:host .container-content{\\n    padding-top: 200px; \\n}\\n\\n.card-body-out{\\n    height: 190px;\\n    padding: 10px;\\n    overflow: auto;\\n}\\n\\n.card-body{\\n    height: 150px;\\n}\\n\\ndiv.container-title {\\n    position: relative;\\n}\\n\\ndiv h1 {\\n    text-align: left;\\n    padding-left: 150px; \\n}\\n\\ndiv button {\\n    position: absolute;\\n    right: 10px;\\n    top: 5px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/list-jobs/list-jobs.component.css\n// module id = ../../../../../src/app/company/list-jobs/list-jobs.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-title\\\">\\n  <h1>View All Potential Applicants\\n    <button type=\\\"button\\\" (click)=\\\"logout()\\\" class=\\\"btn btn-warning\\\" value=\\\"LOGOUT\\\">LOGOUT</button>\\n  </h1>\\n</div>\\n<div class=\\\"container\\\">\\n\\n\\n  <div class=\\\"container-list\\\">\\n\\n    <div class=\\\"form-group\\\" *ngIf=\\\"isDataAvailable\\\">\\n\\n      <label class=\\\"col-form-label\\\">Select the Posted JOB from the List of all Posted JOBS</label>\\n      <select class=\\\"form-control\\\" name=\\\"selectedJob\\\" [(ngModel)]=\\\"jobs\\\" required (change)=\\\"valueChange()\\\">\\n        <option *ngFor=\\\"let selectedJob of dispJobs\\\" [ngValue]=\\\"selectedJob\\\"> {{selectedJob.jobname}} </option>\\n      </select>\\n    </div>\\n    <input type=\\\"button\\\" (click)=\\\"back()\\\" class=\\\"btn btn-outline-warning\\\" value=\\\"Back To Dashboard\\\">\\n\\n  </div>\\n  <div class=\\\"container-content\\\">\\n    <div class=\\\"card border-secondary mb-3\\\" *ngIf=\\\"hasApplicants\\\">\\n      <div class=\\\"card-header\\\">Eligible Applicants.</div>\\n      <small id=\\\"smallText\\\" class=\\\"form-text text-muted\\\"> Applicants are sorting in decreasing order of their aggregated Scales of skills.</small>\\n      <div class=\\\"card-body-out\\\" *ngFor=\\\"let entry of appls\\\">\\n        <!-- <h4 class=\\\"card-title\\\">Secondary card title</h4>\\n          <p class=\\\"card-text\\\">Some quick example text to build on the card title and make up the bulk of the card's content.</p> -->\\n        <div class=\\\"card bg-light mb-3\\\">\\n          <div class=\\\"card-body\\\">\\n            <h4 class=\\\"card-title\\\">{{entry.fullname}}</h4>\\n            <p class=\\\"card-text\\\">Email: &nbsp;&nbsp;{{entry.email}} &nbsp;&nbsp; &nbsp;&nbsp;Contact: &nbsp;&nbsp;{{entry.contact}}</p>\\n            <span class=\\\"card-text\\\">Expected Salary: &nbsp;&nbsp;{{entry.salary}}</span>\\n            <p class=\\\"card-text\\\"></p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n\\n  <div class=\\\"alert alert-dismissible alert-danger\\\" *ngIf=\\\"isEmpty\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" (click)=\\\"warnClose()\\\">&times;</button>\\n    <a href=\\\"/compDashboard\\\" class=\\\"alert-link\\\">{{message}}</a>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/list-jobs/list-jobs.component.html\n// module id = ../../../../../src/app/company/list-jobs/list-jobs.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticateComponent } from '../../authenticate.component';\nimport { JobSchema, RequirementSchema } from '../../schemas/JobSchema';\nimport { ListJobsService } from './list-jobs.service';\nimport { ApplicantSchema } from '../../schemas/ApplicantSchema';\n\n@Component({\n  selector: 'app-list-jobs',\n  templateUrl: './list-jobs.component.html',\n  styleUrls: ['./list-jobs.component.css'],\n  providers: [ListJobsService]\n})\nexport class ListJobsComponent implements OnInit {\n\n  sessionKey = \"\";\n  companyname: string = \"\";\n  isDataAvailable: boolean = false;\n  dispJobs: any[];\n  jobs: JobSchema = {\n    companyname: null,\n    jobname: null,\n    description: null,\n    salary: 0,\n    type: null,\n  };\n\n  reqs: RequirementSchema = {\n    id: 0,\n    jobid: 0,\n    qualification: null,\n    posses: false,\n    skill: null,\n    scale: 0\n  };\n\n  appl: ApplicantSchema = {\n    fullname: null,\n    email: null,\n    contact: null,\n    salary: null,\n    jobid: 0\n  }\n\n  appls: any[];\n\n  hasApplicants: boolean = false;\n  isEmpty: boolean = false;\n  message: string = \"\";\n\n  constructor(private listJobService: ListJobsService,\n    private router: Router,\n    private auth: AuthenticateComponent) {\n  }\n\n  async ngOnInit() {\n      //to check if current user is the active user\n    if (this.auth.isActiveUser('sessionID')) {\n      //continue using the session\n      console.log(\"Hi \" + sessionStorage.getItem('uname'));\n      this.companyname = sessionStorage.getItem('cname');\n    } else {\n      //redirect to login screen\n      this.router.navigate(['./']);\n    }\n    //getting all jobs from Server\n    await this.listJobService.getAllJobsByCompany(this.companyname).then(result => {\n      this.jobs = result;\n      this.dispJobs = result;\n      this.isDataAvailable = true;\n    });\n  }\n\n  //listener for the dropdown menu\n  valueChange(){\n    this.appl = {\n      fullname: null,\n      email: null,\n      contact: null,\n      salary: null,\n      jobid: 0\n    };\n    this.appls = [];\n    const jobid = this.jobs.id;\n    //Get all the selected applicants and display them.\n    this.listJobService.getSelApplsByJobId(jobid).then( data => {\n      this.appl = data;\n      this.appls = data;\n      if( !(data === undefined) || !(data === null)){\n        this.hasApplicants = true;\n      }\n    }).catch(e => {\n      console.log(e);\n      this.isEmpty = true;\n      this.hasApplicants = false;\n      this.message = \"Retrival of Applicants Failed. Try Again.\";\n    });\n\n  }\n\n  //handler for the BACK button\n  back() {\n    this.router.navigate(['/compDashboard']);\n  }\n\n  //Handler for closing the warning bar\n  warnClose(){\n    this.isEmpty = false;\n    this.router.navigate(['/compDashboard']);\n  }\n\n  //handler for LOGOUT button\n  logout() {\n    this.sessionKey = \"\";\n    this.auth.setCookie(this.sessionKey);\n    sessionStorage.setItem('uname', \"\");\n    this.router.navigate(['/']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/list-jobs/list-jobs.component.ts","import {\n  Injectable,\n  Inject\n} from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse\n} from '@angular/common/http';\n\n@Injectable()\nexport class ListJobsService {\n\n  constructor(@Inject(HttpClient) private httpClient: HttpClient) { }\n\n  //get All Jobs List for this comapny\n  getAllJobsByCompany(company: string): Promise<any> {\n    const url = 'http://localhost:9090/api/company/jobsByCompany/' + company;\n    return this.httpClient.get(url).toPromise().catch(e => {\n      console.log(e);\n    });\n  }\n\n  //get All selected Applicants for this job\n  getSelApplsByJobId(jobid: number): Promise<any> {\n    const url = 'http://localhost:9090/api/selAppl/' + jobid;\n    return this.httpClient.get(url).toPromise();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/list-jobs/list-jobs.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host .form-check-label{\\n    padding-right: 120px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/post-job/post-job.component.css\n// module id = ../../../../../src/app/company/post-job/post-job.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Post New Job</h1>\\n</div>\\n<div class=\\\"container\\\">\\n  <form>\\n\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-form-label\\\">Job Role</label>\\n        <input id=\\\"jobname\\\" name=\\\"jobname\\\" class=\\\"form-control\\\" required minlength=\\\"2\\\" [(ngModel)]=\\\"jobname\\\" placeholder=\\\"Job Role\\\"\\n          #jname=\\\"ngModel\\\">\\n        <small id=\\\"jobHelp\\\" class=\\\"form-text text-muted\\\">Role of the job.</small>\\n        <!-- FIELD VALIDATOR -->\\n        <div *ngIf=\\\"jname.invalid && (jname.dirty || jname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n          <div *ngIf=\\\"jname.errors.required\\\">\\n            Job Role is required.\\n          </div>\\n          <div *ngIf=\\\"jname.errors.minlength\\\">\\n            Job Role must be at least 2 characters long.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-form-label\\\">Job Description</label>\\n        <textarea id=\\\"description\\\" rows=\\\"2\\\" name=\\\"description\\\" class=\\\"form-control\\\" required minlength=\\\"4\\\" placeholder=\\\"Job Description\\\"\\n          [(ngModel)]=\\\"description\\\" #dname=\\\"ngModel\\\"></textarea>\\n        <small id=\\\"descHelp\\\" class=\\\"form-text text-muted\\\">A Brief description regarding the job.</small>\\n        <!-- FIELD VALIDATOR -->\\n        <div *ngIf=\\\"dname.invalid && (dname.dirty || dname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n          <div *ngIf=\\\"dname.errors.required\\\">\\n            Job Description is required.\\n          </div>\\n          <div *ngIf=\\\"dname.errors.minlength\\\">\\n            Job Description must be at least 4 characters long.\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\">Job Type</label>\\n          <div class=\\\"form-check\\\" (click)=\\\"radioType($event)\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadis\\\" id=\\\"optionsRadis1\\\" value=\\\"full-time\\\" checked=\\\"\\\"> Full Time\\n            </label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadis\\\" id=\\\"optionsRadis2\\\" value=\\\"part-time\\\"> Part Time\\n            </label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadis\\\" id=\\\"optionsRadis2\\\" value=\\\"contract\\\"> Contract\\n            </label>\\n\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\">Required Academic Degree/s</label>\\n          <input type=\\\"text\\\" id=\\\"degree\\\" name=\\\"degree\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"degree\\\" placeholder=\\\"Academic Degrees\\\" #degname=\\\"ngModel\\\"\\n            (keydown)=\\\"degreeKeyFunction($event)\\\" required>\\n          <small id=\\\"degreeHelp\\\" class=\\\"form-text text-muted\\\">Type the name of Required Academic Degree. Press Enter to push into the 'Academic Qualifications' section.</small>\\n          <!-- FIELD VALIDATOR -->\\n          <div *ngIf=\\\"degname.invalid && (degname.dirty || degname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n            <div *ngIf=\\\"degname.errors.required\\\">\\n              Academic Qualification is required.\\n            </div>\\n\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"hasDegrees\\\" style=\\\"width: 90%; padding-left: 70px;\\\">\\n          <label class=\\\"form-check-label\\\">Academic Qualifications</label>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" (click)=\\\"closeDegree()\\\">&times;</button>\\n          <select multiple=\\\"\\\" class=\\\"form-control\\\">\\n            <option *ngFor=\\\"let d of degrees\\\">{{d}}</option>\\n          </select>\\n        </div>\\n\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-form-label\\\">Required Skill/s [5 - Expert .... 1 - Novice]</label>\\n          <div class=\\\"form-check\\\" (click)=\\\"radioSkill($event)\\\">\\n            <label class=\\\"form-check-label\\\">Scale of Each Skill</label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios1\\\" value=\\\"1\\\" checked=\\\"\\\"> 1\\n            </label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios2\\\" value=\\\"2\\\"> 2\\n            </label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios2\\\" value=\\\"3\\\"> 3\\n            </label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios2\\\" value=\\\"4\\\"> 4\\n            </label>\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios2\\\" value=\\\"5\\\"> 5\\n            </label>\\n            <br>\\n\\n          </div>\\n          <label class=\\\"form-check-label\\\">&nbsp;&nbsp;&nbsp;&nbsp;Skill</label>\\n\\n          <input type=\\\"text\\\" id=\\\"skill\\\" name=\\\"skill\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"skill\\\" placeholder=\\\"Skill/s\\\" #skname=\\\"ngModel\\\"\\n            (keydown)=\\\"skillKeyFunction($event)\\\" required>\\n          <small id=\\\"skillHelp\\\" class=\\\"form-text text-muted\\\">Type the required Skill and select the desired Scale. Press Enter to push into the 'SKILLS' section.</small>\\n          <!-- FIELD VALIDATOR -->\\n          <div *ngIf=\\\"skname.invalid && (skname.dirty || skname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n            <div *ngIf=\\\"skname.errors.required\\\">\\n              Atleast One Skill Set is required.\\n            </div>\\n\\n          </div>\\n\\n        </div>\\n\\n        <div *ngIf=\\\"hasSkills\\\" style=\\\"width: 90%; padding-left: 70px;\\\">\\n          <label class=\\\"form-check-label\\\">SKILLS</label>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" (click)=\\\"closeSkill()\\\">&times;</button>\\n          <select multiple=\\\"\\\" class=\\\"form-control\\\">\\n            <option *ngFor=\\\"let s of skillSet\\\">{{s}}</option>\\n          </select>\\n        </div>\\n\\n      </div>\\n      <small *ngIf=\\\"hasSkills\\\" style=\\\"width: 90%; padding-left: 70px;\\\" id=\\\"skillBoxHelp\\\" class=\\\"form-text text-muted\\\">Select Skill from here if you wish to edit the scale value.</small>\\n\\n\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\">Salary</label>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\">CAD$</span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Amount (to the nearest CAD)\\\" id=\\\"salary\\\" name=\\\"salary\\\" required minlength=\\\"1\\\"\\n              appForbiddenName=\\\"0\\\" placeholder=\\\"Salary\\\" [(ngModel)]=\\\"salary\\\" #sname=\\\"ngModel\\\" pattern=\\\"[0-9]*\\\">\\n            <div class=\\\"input-group-append\\\">\\n              <span class=\\\"input-group-text\\\">.00</span>\\n            </div>\\n          </div>\\n        </div>\\n        <small id=\\\"salaryHelp\\\" class=\\\"form-text text-muted\\\">Salary can be any non decimal value except Zero.</small>\\n        <!-- FIELD VALIDATOR -->\\n        <div *ngIf=\\\"sname.invalid && (sname.dirty || sname.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\n          <div *ngIf=\\\"sname.errors.required\\\">\\n            Salary is required.\\n          </div>\\n          <div *ngIf=\\\"sname.errors.minlength\\\">\\n            Salary must be at least Single Digit.\\n          </div>\\n          <div *ngIf=\\\"sname.errors.forbiddenName\\\">\\n            Salary cannot be Zero. Salary must be greater than Zero.\\n          </div>\\n          <div *ngIf=\\\"sname.errors.pattern\\\">\\n            Salary must be only digits. Cannot be Zero or Decimal Values either.\\n          </div>\\n\\n        </div>\\n      </div>\\n\\n\\n      <button type=\\\"button\\\" (click)=\\\"logout()\\\" class=\\\"btn btn-warning\\\" value=\\\"LOGOUT\\\">LOGOUT</button>\\n      <input type=\\\"button\\\" (click)=\\\"back()\\\" class=\\\"btn btn-outline-warning\\\" value=\\\"Back To Dashboard\\\">\\n      <input type=\\\"button\\\" (click)=\\\"addJob()\\\" class=\\\"btn btn-success\\\" value=\\\"Add Job\\\">\\n\\n    </div>\\n  </form>\\n</div>\\n\\n<div class=\\\"alert alert-dismissible alert-danger\\\" *ngIf=\\\"isEmpty\\\">\\n  <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" (click)=\\\"warnClose()\\\">&times;</button>\\n  <a href=\\\"/compDashboard\\\" class=\\\"alert-link\\\">{{message}}</a>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/post-job/post-job.component.html\n// module id = ../../../../../src/app/company/post-job/post-job.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticateComponent } from '../../authenticate.component';\nimport { JobSchema, RequirementSchema } from '../../schemas/JobSchema';\nimport { PostJobService } from './post-job.service';\nimport { HttpErrorResponse } from '../../../../node_modules/@angular/common/http';\n\n@Component({\n  selector: 'app-post-job',\n  templateUrl: './post-job.component.html',\n  styleUrls: ['./post-job.component.css'],\n  providers: [PostJobService]\n})\nexport class PostJobComponent implements OnInit {\n\n  sessionKey = \"\";\n  companyname: string = \"\";\n  jobname: string = \"\";\n  description: string = \"\";\n  salary: number;\n  degree: string = \"\";\n  hasDegrees: boolean = false;\n  degrees = [];\n  skill: string = \"\";\n  hasSkills: boolean = false;\n  skills = [];\n  scale: number = 1;\n  scales = [];\n  skillSet = [];\n  type = \"full-time\";\n  jobid: number;\n  job: JobSchema = {\n    companyname: null,\n    jobname: null,\n    description: null,\n    salary: 0,\n    type: null,\n  };\n  req: RequirementSchema = {\n    jobid: 0,\n    qualification: null,\n    posses: false,\n    skill: null,\n    scale: 0\n  };\n  message: string = \"\";\n  isEmpty: boolean = false;\n  count: number = 0;\n  isValid: boolean = false;\n\n  constructor(private postJobService: PostJobService,\n    private router: Router,\n    private auth: AuthenticateComponent) {\n      //to check if current user is the active user\n    if (auth.isActiveUser('sessionID')) {\n      //continue using the session\n      console.log(\"Hi \" + sessionStorage.getItem('uname'));\n      this.companyname = sessionStorage.getItem('cname');\n    } else {\n      //redirect to login screen\n      router.navigate(['./']);\n    }\n  }\n\n  ngOnInit() {\n    this.isEmpty = false;\n  }\n\n  //validate and add the job\n  async addJob() {\n    if (\n      ((this.jobname && this.description && this.salary && this.degree && this.skill && this.scale) === undefined)\n      || ((this.jobname && this.description && this.salary && this.degree && this.skill && this.scale) === null)\n      || ((this.jobname && this.description && this.salary && this.degree && this.skill) === '')) {\n      this.isValid = false\n    }\n    else {\n      this.isValid = true;\n    }\n\n    if (this.isValid) {\n      this.job.companyname = this.companyname;\n      this.job.jobname = this.jobname;\n      this.job.description = this.description;\n      this.job.salary = this.salary;\n      this.job.type = this.type;\n      this.count = 0;\n\n      await this.postJobService.addJob(this.job).then(async resp => {\n        this.jobid = resp.response;\n        if (resp === undefined) {\n          this.isEmpty = true;\n          this.message = \"Error Occured. Click here to return to Dashboard and Try Again.\";\n        } else if (resp.response === 'Job Already Exists.') {\n          this.isEmpty = true;\n          this.message = \"Job Already Exists. Click here to return to Dashboard.\";\n        } else {\n          for (let deg of this.degrees) {\n            this.req.jobid = this.jobid;\n            this.req.qualification = deg;\n            await this.postJobService.addReq(this.req).then(result => {\n              console.log(\"Response for Degrees upload: \" + JSON.stringify(result));\n              if (!(result === undefined)) {\n                if ((result.response === \"Requirement Added Successfully\")) {\n                  this.count++;\n                } else {\n                  console.log(\"Error Response: \" + result.response);\n                }\n              } else {\n                this.isEmpty = true;\n                this.message = \"Error Occured. Click here to return to Dashboard and Try Again.\";\n              }\n            }).catch((err: HttpErrorResponse) => {\n              // simple logging, but you can do a lot more, see below\n              console.error('An error occurred:', err.error);\n              this.isEmpty = true;\n              this.message = \"Error Occured While adding Qualifications. Click here to return to Dashboard and Edit this Job.\";\n              return;\n            });\n            this.req = {};\n          }\n          for (var i = 0; i < this.skills.length; i++) {\n            this.req.jobid = this.jobid;\n            this.req.skill = this.skills[i];\n            this.req.scale = this.scales[i];\n            await this.postJobService.addReq(this.req).then(result => {\n              console.log(\"Response for Skills Upload: \" + JSON.stringify(result));\n              if (!(result === undefined) && (result.response === \"Requirement Added Successfully\")) {\n                this.count++;\n              } else {\n                console.log(\"Error Response: \" + result.response);\n              }\n            }).catch((err: HttpErrorResponse) => {\n              // Error logging\n              console.error('An error occurred:', err.error);\n              this.isEmpty = true;\n              this.message = \"Error Occured while adding Skills. Click here to return to Dashboard and Edit this Job.\";\n              return;\n            });\n            this.req = {};\n          }\n        }\n        if (!(resp === undefined) && (this.count === (this.skills.length + this.degrees.length))) {\n          this.isEmpty = true;\n          this.message = \" Job Created Succesfully. Click here to return to DashBoard\";\n        } else {\n          this.isEmpty = true;\n          this.message = \"Job Creation Failed. Please Re-Enter details and try submitting again\";\n        }\n      }).catch((err: HttpErrorResponse) => {\n        // simple logging, but you can do a lot more, see below\n        console.error('An error occurred:', err.error);\n        this.isEmpty = true;\n        this.message = \"Error Occured while creating Job. Click here to return to Dashboard and Post this Job Again.\";\n        return;\n      });\n\n    } else {\n      this.isEmpty = true;\n      this.message = \" Please Fill all the Fields and Press Enroll Button Again\"\n    }\n\n  }\n\n  //Handler for BACK button\n  back() {\n    this.router.navigate(['/compDashboard']);\n  }\n\n  //on Return key press push degrees into the ACADEMIC QUALIFICATIONS box\n  degreeKeyFunction(event) {\n    if (event.keyCode == 13) {\n      this.hasDegrees = true;\n      this.degrees.push(this.degree);\n    }\n\n  }\n  closeDegree() {\n    this.hasDegrees = false;\n    this.degrees = [];\n  }\n\n  //on Return key press push skills into the SKILLS box\n  skillKeyFunction(event) {\n    if (event.keyCode == 13) {\n      this.hasSkills = true;\n\n      if (this.skills.indexOf(this.skill) !== -1) {\n        const index = this.skills.indexOf(this.skill);\n        this.scales[index] = this.scale;\n        this.skillSet[index] = this.skill + \" \" + this.scale;\n      } else {\n        this.skills.push(this.skill);\n        this.scales.push(this.scale);\n        this.skillSet.push(this.skill + \" \" + this.scale);\n      }\n    }\n  }\n\n  //Handler for closing the SKILL box\n  closeSkill() {\n    this.hasSkills = false;\n    this.skills = [];\n    this.scales = [];\n    this.skillSet = [];\n  }\n\n  //listener for scale radios\n  radioSkill(event) {\n    this.scale = event.target.value;\n  }\n\n  //Listerner for Job type radios\n  radioType(event) {\n    this.type = event.target.value;\n  }\n\n  //handler for warning bar\n  warnClose() {\n    this.isEmpty = false;\n    this.router.navigate(['/compDashboard']);\n  }\n\n  //handler for LOGOUT button\n  logout() {\n    this.sessionKey = \"\";\n    this.auth.setCookie(this.sessionKey);\n    sessionStorage.setItem('uname', \"\");\n    this.router.navigate(['/']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/post-job/post-job.component.ts","import {  Injectable, \n          Inject }                      from '@angular/core';\nimport {  HttpClient, \n          HttpErrorResponse }           from '@angular/common/http';\nimport {  JobSchema, RequirementSchema }                   from '../../schemas/JobSchema';\n\n\n@Injectable()\nexport class PostJobService {\n\n  constructor(@Inject(HttpClient) private httpClient: HttpClient) { }\n\n  //add Job\n  addJob(job: JobSchema): Promise<any> {\n    const url = 'http://localhost:9090/api/company/addjob';\n    return this.httpClient.post(url, job).toPromise();\n  };\n\n  //add Requirements\n  addReq(req: RequirementSchema): Promise<any> {\n    const url = 'http://localhost:9090/api/company/addreq';\n    return this.httpClient.post(url, req).toPromise();\n  };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/app/company/post-job/post-job.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/sridhar.matta/Documents/myWebApp/recruitingApp/frontend/src/main/frontend/src/main.ts"],"sourceRoot":"webpack:///"}